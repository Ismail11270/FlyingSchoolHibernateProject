[DEBUG] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [persistent] -> [org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [global_temporary] -> [org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [local_temporary] -> [org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
[TRACE] Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
[TRACE] Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [c3p0] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.connection.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[INFO ] HHH000412: Hibernate ORM core version 5.4.18.Final
[DEBUG] HHH000206: hibernate.properties not found
[TRACE] trying via [new URL("hibernate.cfg.xml")]
[TRACE] trying via [ClassLoader.getResourceAsStream("hibernate.cfg.xml")]
[TRACE] In resolveEntity(-//Hibernate/Hibernate Configuration DTD 3.0//EN, hibernate-configuration-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [hibernate-configuration-3.0.dtd]
[DEBUG] cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[TRACE] reading mappings from file : src\xmlMaps\Address.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=src\xmlMaps\Address.hbm.xml,type=FILE)
[TRACE] reading mappings from file : src\xmlMaps\Course.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=src\xmlMaps\Course.hbm.xml,type=FILE)
[TRACE] reading mappings from file : src\xmlMaps\Flight.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=src\xmlMaps\Flight.hbm.xml,type=FILE)
[TRACE] reading mappings from file : src\xmlMaps\FlightInstructor.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=src\xmlMaps\FlightInstructor.hbm.xml,type=FILE)
[TRACE] reading mappings from file : src\xmlMaps\Person.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=src\xmlMaps\Person.hbm.xml,type=FILE)
[TRACE] reading mappings from file : src\xmlMaps\Student.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=src\xmlMaps\Student.hbm.xml,type=FILE)
[TRACE] reading mappings from file : src\xmlMaps\TheoryClass.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=src\xmlMaps\TheoryClass.hbm.xml,type=FILE)
[DEBUG] Building session factory using internal StandardServiceRegistryBuilder
[DEBUG] Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] Building session factory using provided StandardServiceRegistry
[TRACE] Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
[TRACE] Initializing service [role=org.hibernate.cache.spi.RegionFactory]
[DEBUG] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[TRACE] Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
[TRACE] Initializing service [role=org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory]
[DEBUG] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
[INFO ] HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:6033/project
[INFO ] HHH10001001: Connection properties: {user=root}
[INFO ] HHH10001003: Autocommit mode: false
[INFO ] HHH10001007: JDBC isolation level: <unknown>
[DEBUG] Database ->
       name : MySQL
    version : 5.1.34-community
      major : 5
      minor : 1
[DEBUG] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
[DEBUG] JDBC version : 3.0
[INFO ] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
[DEBUG] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] Unable to use Java 1.7 Connection#getSchema
[DEBUG] Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.MySQL5InnoDBDialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at util.HiberUtil.getXMLSessionFactory(HiberUtil.java:60)
	at util.HiberUtil.getSessionFactory(HiberUtil.java:45)
	at hiberApp.MainApp.<clinit>(MainApp.java:8)
[TRACE] Normalizing identifier quoting [project]
[TRACE] Normalizing identifier quoting [null]
[DEBUG] HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
[DEBUG] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[TRACE] Indexing mapping document [Origin(name=src\xmlMaps\Address.hbm.xml,type=FILE)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=src\xmlMaps\Course.hbm.xml,type=FILE)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=src\xmlMaps\Flight.hbm.xml,type=FILE)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=src\xmlMaps\FlightInstructor.hbm.xml,type=FILE)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=src\xmlMaps\Person.hbm.xml,type=FILE)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=src\xmlMaps\Student.hbm.xml,type=FILE)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=src\xmlMaps\TheoryClass.hbm.xml,type=FILE)] for purpose of building entity hierarchy ordering
[TRACE] Import: model.Address -> model.Address
[TRACE] Import: Address -> model.Address
[TRACE] Normalizing identifier quoting [ADDRESSES]
[DEBUG] Mapping class: model.Address -> ADDRESSES
[TRACE] Normalizing identifier quoting [ADDRESS_ID]
[DEBUG] Mapped property: id -> [ADDRESS_ID]
[DEBUG] Forcing column [address_id] to be non-null as it is part of the primary key for table [addresses]
[TRACE] Normalizing identifier quoting [COUNTRY]
[DEBUG] Mapped property: country -> [COUNTRY]
[TRACE] Normalizing identifier quoting [CITY]
[DEBUG] Mapped property: city -> [CITY]
[TRACE] Normalizing identifier quoting [POSTAL_CODE]
[DEBUG] Mapped property: postalCode -> [POSTAL_CODE]
[TRACE] Normalizing identifier quoting [STREET]
[DEBUG] Mapped property: street -> [STREET]
[TRACE] Import: model.Course -> model.Course
[TRACE] Import: Course -> model.Course
[TRACE] Normalizing identifier quoting [COURSES]
[DEBUG] Mapping class: model.Course -> COURSES
[TRACE] Normalizing identifier quoting [COURSE_ID]
[DEBUG] Mapped property: id -> [COURSE_ID]
[DEBUG] Forcing column [course_id] to be non-null as it is part of the primary key for table [courses]
[TRACE] Normalizing identifier quoting [CERT_TYPE]
[DEBUG] Mapped property: certType -> [CERT_TYPE]
[TRACE] Normalizing identifier quoting [DESCRIPTION]
[DEBUG] Mapped property: description -> [DESCRIPTION]
[TRACE] Normalizing identifier quoting [START_DATE]
[DEBUG] Mapped property: startDate -> [START_DATE]
[TRACE] Normalizing identifier quoting [END_DATE]
[DEBUG] Mapped property: endDate -> [END_DATE]
[DEBUG] Mapped property: students -> []
[TRACE] Import: model.Flight -> model.Flight
[TRACE] Import: Flight -> model.Flight
[TRACE] Normalizing identifier quoting [FLIGHTS]
[DEBUG] Mapping class: model.Flight -> FLIGHTS
[TRACE] Normalizing identifier quoting [FLIGHT_ID]
[DEBUG] Mapped property: id -> [FLIGHT_ID]
[DEBUG] Forcing column [flight_id] to be non-null as it is part of the primary key for table [flights]
[TRACE] Normalizing identifier quoting [DESCRIPTION]
[DEBUG] Mapped property: description -> [DESCRIPTION]
[TRACE] Normalizing identifier quoting [DATE]
[DEBUG] Mapped property: date -> [DATE]
[TRACE] Normalizing identifier quoting [STUDENT_ID]
[DEBUG] Mapped property: student -> [STUDENT_ID]
[TRACE] Normalizing identifier quoting [INSTRUCTOR_ID]
[DEBUG] Mapped property: instructor -> [INSTRUCTOR_ID]
[TRACE] Import: model.Person -> model.Person
[TRACE] Import: Person -> model.Person
[TRACE] Normalizing identifier quoting [PERSONS]
[DEBUG] Mapping class: model.Person -> PERSONS
[TRACE] Normalizing identifier quoting [PERSON_ID]
[DEBUG] Mapped property: id -> [PERSON_ID]
[DEBUG] Forcing column [person_id] to be non-null as it is part of the primary key for table [persons]
[TRACE] Normalizing identifier quoting [FIRST_NAME]
[DEBUG] Mapped property: firstName -> [FIRST_NAME]
[TRACE] Normalizing identifier quoting [SECOND_NAME]
[DEBUG] Mapped property: secondName -> [SECOND_NAME]
[TRACE] Normalizing identifier quoting [SSN]
[DEBUG] Mapped property: SSN -> [SSN]
[TRACE] Normalizing identifier quoting [ADDRESS_ID]
[DEBUG] Mapped property: address -> [ADDRESS_ID]
[TRACE] Import: model.FlightInstructor -> model.FlightInstructor
[TRACE] Import: FlightInstructor -> model.FlightInstructor
[TRACE] Normalizing identifier quoting [FLIGHT_INSTRUCTORS]
[DEBUG] Mapping joined-subclass: model.FlightInstructor -> FLIGHT_INSTRUCTORS
[TRACE] Normalizing identifier quoting [INSTRUCTOR_ID]
[DEBUG] Forcing column [instructor_id] to be non-null as it is part of the primary key for table [flight_instructors]
[TRACE] Normalizing identifier quoting [LICENCE_NO]
[DEBUG] Mapped property: licenceNo -> [LICENCE_NO]
[TRACE] Normalizing identifier quoting [valid]
[TRACE] Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
[TRACE] Creating ManagedBean(goodies.BooleanConverter) using direct instantiation
[DEBUG] Mapped property: valid -> [valid]
[DEBUG] Mapped property: flights -> []
[DEBUG] Mapped property: students -> []
[TRACE] Import: model.Student -> model.Student
[TRACE] Import: Student -> model.Student
[TRACE] Normalizing identifier quoting [STUDENTS]
[DEBUG] Mapping joined-subclass: model.Student -> STUDENTS
[TRACE] Normalizing identifier quoting [STUDENT_ID]
[DEBUG] Forcing column [student_id] to be non-null as it is part of the primary key for table [students]
[TRACE] Normalizing identifier quoting [MEDICAL_TESTS]
[DEBUG] Mapped property: medicalTests -> [MEDICAL_TESTS]
[TRACE] Normalizing identifier quoting [COURSE_ID]
[DEBUG] Mapped property: course -> [COURSE_ID]
[TRACE] Normalizing identifier quoting [INSTRUCTOR_ID]
[DEBUG] Mapped property: instructor -> [INSTRUCTOR_ID]
[DEBUG] Mapped property: flights -> []
[DEBUG] Mapped property: theoryClasses -> []
[TRACE] Import: model.TheoryClass -> model.TheoryClass
[TRACE] Import: TheoryClass -> model.TheoryClass
[TRACE] Normalizing identifier quoting [THEORY_CLASSES]
[DEBUG] Mapping class: model.TheoryClass -> THEORY_CLASSES
[TRACE] Normalizing identifier quoting [CLASS_ID]
[DEBUG] Mapped property: id -> [CLASS_ID]
[DEBUG] Forcing column [class_id] to be non-null as it is part of the primary key for table [theory_classes]
[TRACE] Normalizing identifier quoting [NAME]
[DEBUG] Mapped property: name -> [NAME]
[TRACE] Normalizing identifier quoting [HOURS]
[DEBUG] Mapped property: hours -> [HOURS]
[TRACE] Normalizing identifier quoting [GRADE]
[DEBUG] Mapped property: grade -> [GRADE]
[DEBUG] Mapped property: students -> []
[DEBUG] Skipping annotated class processing of entity [model.TheoryClass], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model.Person], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model.FlightInstructor], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model.Flight], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model.Course], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model.Student], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model.Address], as it has already been processed
[DEBUG] Mapping collection: model.Course.students -> STUDENTS
[TRACE] Normalizing identifier quoting [COURSE_ID]
[DEBUG] Binding [ONE_TO_MANY] element type for a [SET]
[DEBUG] Mapped collection : model.Course.students
[DEBUG]    + table -> COURSES
[DEBUG]    + key -> COURSE_ID
[DEBUG]    + one-to-many -> model.Student
[DEBUG] Mapping collection: model.FlightInstructor.flights -> FLIGHTS
[TRACE] Normalizing identifier quoting [INSTRUCTOR_ID]
[DEBUG] Binding [ONE_TO_MANY] element type for a [SET]
[DEBUG] Mapped collection : model.FlightInstructor.flights
[DEBUG]    + table -> FLIGHT_INSTRUCTORS
[DEBUG]    + key -> INSTRUCTOR_ID
[DEBUG]    + one-to-many -> model.Flight
[DEBUG] Mapping collection: model.FlightInstructor.students -> STUDENTS
[TRACE] Normalizing identifier quoting [INSTRUCTOR_ID]
[DEBUG] Binding [ONE_TO_MANY] element type for a [SET]
[DEBUG] Mapped collection : model.FlightInstructor.students
[DEBUG]    + table -> FLIGHT_INSTRUCTORS
[DEBUG]    + key -> INSTRUCTOR_ID
[DEBUG]    + one-to-many -> model.Student
[DEBUG] Mapping collection: model.Student.flights -> FLIGHTS
[TRACE] Normalizing identifier quoting [STUDENT_ID]
[DEBUG] Binding [ONE_TO_MANY] element type for a [SET]
[DEBUG] Mapped collection : model.Student.flights
[DEBUG]    + table -> STUDENTS
[DEBUG]    + key -> STUDENT_ID
[DEBUG]    + one-to-many -> model.Flight
[DEBUG] Mapping collection: model.Student.theoryClasses -> STUDENTS_CLASSES
[TRACE] Normalizing identifier quoting [STUDENT_ID]
[DEBUG] Binding [MANY_TO_MANY] element type for a [SET]
[TRACE] Normalizing identifier quoting [CLASS_ID]
[DEBUG] Forcing column [student_id] to be non-null as it is part of the primary key for table [students_classes]
[DEBUG] Forcing column [class_id] to be non-null as it is part of the primary key for table [students_classes]
[DEBUG] Mapped collection : model.Student.theoryClasses
[DEBUG]    + table -> STUDENTS
[DEBUG]    + key -> STUDENT_ID
[DEBUG]    + element -> CLASS_ID
[DEBUG] Mapping collection: model.TheoryClass.students -> STUDENTS_CLASSES
[TRACE] Normalizing identifier quoting [CLASS_ID]
[DEBUG] Binding [MANY_TO_MANY] element type for a [SET]
[TRACE] Normalizing identifier quoting [STUDENT_ID]
[DEBUG] Mapped collection : model.TheoryClass.students
[DEBUG]    + table -> THEORY_CLASSES
[DEBUG]    + key -> CLASS_ID
[DEBUG]    + element -> STUDENT_ID
[DEBUG] Resolving reference to class: model.Person
[TRACE] Normalizing identifier quoting [INSTRUCTOR_ID]
[DEBUG] Resolving reference to class: model.Student
[DEBUG] Resolving reference to class: model.Address
[TRACE] Normalizing identifier quoting [ADDRESS_ID]
[TRACE] Normalizing identifier quoting [STUDENT_ID]
[DEBUG] Resolving reference to class: model.FlightInstructor
[TRACE] Normalizing identifier quoting [INSTRUCTOR_ID]
[DEBUG] Resolving reference to class: model.Person
[TRACE] Normalizing identifier quoting [STUDENT_ID]
[DEBUG] Resolving reference to class: model.Course
[TRACE] Normalizing identifier quoting [COURSE_ID]
[DEBUG] Resolving reference to class: model.FlightInstructor
[TRACE] Normalizing identifier quoting [INSTRUCTOR_ID]
[DEBUG] Resolving reference to class: model.TheoryClass
[TRACE] Normalizing identifier quoting [CLASS_ID]
[DEBUG] Resolving reference to class: model.Student
[TRACE] Normalizing identifier quoting [STUDENT_ID]
[DEBUG] Resolving reference to class: model.Person
[TRACE] Normalizing identifier quoting [INSTRUCTOR_ID]
[DEBUG] Resolving reference to class: model.Student
[DEBUG] Resolving reference to class: model.Address
[TRACE] Normalizing identifier quoting [ADDRESS_ID]
[TRACE] Normalizing identifier quoting [STUDENT_ID]
[DEBUG] Resolving reference to class: model.FlightInstructor
[TRACE] Normalizing identifier quoting [INSTRUCTOR_ID]
[DEBUG] Resolving reference to class: model.Person
[TRACE] Normalizing identifier quoting [STUDENT_ID]
[DEBUG] Resolving reference to class: model.Course
[TRACE] Normalizing identifier quoting [COURSE_ID]
[DEBUG] Resolving reference to class: model.FlightInstructor
[TRACE] Normalizing identifier quoting [INSTRUCTOR_ID]
[DEBUG] Resolving reference to class: model.TheoryClass
[TRACE] Normalizing identifier quoting [CLASS_ID]
[DEBUG] Resolving reference to class: model.Student
[TRACE] Normalizing identifier quoting [STUDENT_ID]
[TRACE] Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
[TRACE] Interpreting BatchFetchStyle from setting : null
[TRACE] Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
[TRACE] Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
[DEBUG] Building session factory
[DEBUG] SessionFactory name : null
[DEBUG] Automatic flush during beforeCompletion(): enabled
[DEBUG] Automatic session close at end of transaction: disabled
[DEBUG] Statistics: disabled
[DEBUG] Deleted entity synthetic identifier rollback: disabled
[DEBUG] Default entity-mode: pojo
[DEBUG] Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] Allow initialization of lazy state outside session : disabled
[DEBUG] Using BatchFetchStyle : LEGACY
[DEBUG] Default batch fetch size: -1
[DEBUG] Maximum outer join fetch depth: 2
[DEBUG] Default null ordering: NONE
[DEBUG] Order SQL updates by primary key: disabled
[DEBUG] Order SQL inserts for batching: disabled
[DEBUG] multi-tenancy strategy : NONE
[DEBUG] JTA Track by Thread: enabled
[DEBUG] Query language substitutions: {}
[DEBUG] Named query checking : enabled
[DEBUG] Second-level cache: disabled
[DEBUG] Second-level query cache: disabled
[DEBUG] Second-level query cache factory: null
[DEBUG] Second-level cache region prefix: null
[DEBUG] Optimize second-level cache for minimal puts: disabled
[DEBUG] Structured second-level cache entries: disabled
[DEBUG] Second-level cache direct-reference entries: disabled
[DEBUG] Automatic eviction of collection cache: disabled
[DEBUG] JDBC batch size: 15
[DEBUG] JDBC batch updates for versioned data: enabled
[DEBUG] Scrollable result sets: enabled
[DEBUG] Wrap result sets: disabled
[DEBUG] JDBC3 getGeneratedKeys(): enabled
[DEBUG] JDBC result set fetch size: null
[DEBUG] Connection release mode: AFTER_TRANSACTION
[DEBUG] Generate SQL with comments: disabled
[DEBUG] JPA compliance - query : disabled
[DEBUG] JPA compliance - closed-handling : disabled
[DEBUG] JPA compliance - lists : disabled
[DEBUG] JPA compliance - transactions : disabled
[TRACE] Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
[TRACE] Initializing service [role=org.hibernate.event.service.spi.EventListenerRegistry]
[DEBUG] Adding preRemove as PreRemove callback for entity model.FlightInstructor
[DEBUG] Adding preRemove as PreRemove callback for entity model.Student
[TRACE] Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
[DEBUG] Session factory constructed with filter configurations : {}
[DEBUG] Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=30, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\masters\ORI\DaoExample\out\production\DaoExample;C:\masters\ORI\DaoExample\lib\istack-commons-runtime-3.0.7.jar;C:\masters\ORI\DaoExample\lib\dom4j-2.1.3.jar;C:\masters\ORI\DaoExample\lib\classmate-1.5.1.jar;C:\masters\ORI\DaoExample\lib\javax.activation-api-1.2.0.jar;C:\masters\ORI\DaoExample\lib\FastInfoset-1.2.15.jar;C:\masters\ORI\DaoExample\lib\javassist-3.24.0-GA.jar;C:\masters\ORI\DaoExample\lib\stax-ex-1.8.jar;C:\masters\ORI\DaoExample\lib\mchange-commons-java-0.2.15.jar;C:\masters\ORI\DaoExample\lib\jboss-logging-3.3.2.Final.jar;C:\masters\ORI\DaoExample\lib\antlr-2.7.7.jar;C:\masters\ORI\DaoExample\lib\hibernate-c3p0-5.4.18.Final.jar;C:\masters\ORI\DaoExample\lib\jaxb-runtime-2.3.1.jar;C:\masters\ORI\DaoExample\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\masters\ORI\DaoExample\lib\hibernate-core-5.4.18.Final.jar;C:\masters\ORI\DaoExample\lib\mysql-connector-java-5.1.6.jar;C:\masters\ORI\DaoExample\lib\byte-buddy-1.10.10.jar;C:\masters\ORI\DaoExample\lib\jandex-2.1.3.Final.jar;C:\masters\ORI\DaoExample\lib\c3p0-0.9.5.3.jar;C:\masters\ORI\DaoExample\lib\hibernate-commons-annotations-5.1.0.Final.jar;C:\masters\ORI\DaoExample\lib\txw2-2.3.1.jar;C:\masters\ORI\DaoExample\lib\javax.persistence-api-2.2.jar;C:\masters\ORI\DaoExample\lib\jaxb-api-2.3.1.jar;C:\masters\ORI\DaoExample\lib\hibernate-jpamodelgen-5.4.18.Final.jar;C:\masters\ORI\DaoExample\lib\slf4j-log4j12-1.7.7.jar;C:\masters\ORI\DaoExample\lib\slf4j-api-1.7.7.jar;C:\masters\ORI\DaoExample\lib\log4j-1.2.16.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Belgrade, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.5\bin, sun.java.command=hiberApp.MainApp, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismail, hibernate.c3p0.max_statements=10, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=C:\Program Files\Java\jdk-11.0.5, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.5+10-LTS, user.name=Ismail, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:6033/project, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismail\AppData\Local\Temp\, java.version=11.0.5, user.dir=C:\masters\ORI\DaoExample, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6e0c6a7a, java.library.path=C:\Program Files\Java\jdk-11.0.5\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-11.0.5\bin;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Java\jdk-11.0.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\SDK\Go\bin;C:\Program Files\nodejs\;C:\Program Files\MATLAB\R2020a\bin;C:\SDK\python2.7\;C:\tools\gnuplot\bin;C:\Program Files\TortoiseSVN\bin;C:\SDK\python\Scripts\;C:\SDK\python\;C:\Users\Ismail\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\CLion 2019.2.5\bin;;C:\Users\Ismail\go\bin;C:\Users\Ismail\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ismail\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.5+10-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
[TRACE] Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
[DEBUG] Skipping JACC integration as it was not enabled
[DEBUG] Instantiated session factory
[TRACE] Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
[TRACE] Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
[TRACE] Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
[DEBUG] Not known whether passed class name [model.Course] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Course
[DEBUG] Not known whether passed class name [model.Course] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Course
[TRACE] Initializing service [role=org.hibernate.bytecode.spi.ProxyFactoryFactory]
[TRACE] Skipping duplicate registration of path [certType], existing type = [org.hibernate.type.CustomType@7fd987ef], incoming type = [org.hibernate.type.CustomType@7fd987ef]
[TRACE] Skipping duplicate registration of path [description], existing type = [org.hibernate.type.StringType@77b21474], incoming type = [org.hibernate.type.StringType@77b21474]
[TRACE] Skipping duplicate registration of path [startDate], existing type = [org.hibernate.type.LocalDateType@3f2049b6], incoming type = [org.hibernate.type.LocalDateType@3f2049b6]
[TRACE] Skipping duplicate registration of path [endDate], existing type = [org.hibernate.type.LocalDateType@3f2049b6], incoming type = [org.hibernate.type.LocalDateType@3f2049b6]
[TRACE] Skipping duplicate registration of path [students], existing type = [org.hibernate.type.SetType(model.Course.students)], incoming type = [org.hibernate.type.SetType(model.Course.students)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[DEBUG] Not known whether passed class name [model.Flight] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Flight
[DEBUG] Not known whether passed class name [model.Flight] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Flight
[TRACE] Skipping duplicate registration of path [student.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [instructor.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [description], existing type = [org.hibernate.type.StringType@77b21474], incoming type = [org.hibernate.type.StringType@77b21474]
[TRACE] Skipping duplicate registration of path [date], existing type = [org.hibernate.type.LocalDateType@3f2049b6], incoming type = [org.hibernate.type.LocalDateType@3f2049b6]
[TRACE] Skipping duplicate registration of path [student], existing type = [org.hibernate.type.ManyToOneType(model.Student)], incoming type = [org.hibernate.type.ManyToOneType(model.Student)]
[TRACE] Skipping duplicate registration of path [student.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [student.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [instructor], existing type = [org.hibernate.type.ManyToOneType(model.FlightInstructor)], incoming type = [org.hibernate.type.ManyToOneType(model.FlightInstructor)]
[TRACE] Skipping duplicate registration of path [instructor.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [instructor.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[DEBUG] Not known whether passed class name [model.Person] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Person
[DEBUG] Not known whether passed class name [model.Person] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Person
[DEBUG] Not known whether passed class name [model.FlightInstructor] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.FlightInstructor
[DEBUG] Not known whether passed class name [model.Student] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Student
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [course.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [instructor.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipped adding attribute [flights] to base-type [model.Person] as more than one sub-type defined the attribute using incompatible types (strictly speaking the attributes are not inherited); existing type = [org.hibernate.type.SetType(model.FlightInstructor.flights)], incoming type = [org.hibernate.type.SetType(model.Student.flights)]
[TRACE] Skipping duplicate registration of path [firstName], existing type = [org.hibernate.type.StringType@77b21474], incoming type = [org.hibernate.type.StringType@77b21474]
[TRACE] Skipping duplicate registration of path [secondName], existing type = [org.hibernate.type.StringType@77b21474], incoming type = [org.hibernate.type.StringType@77b21474]
[TRACE] Skipping duplicate registration of path [SSN], existing type = [org.hibernate.type.DoubleType@5528a42c], incoming type = [org.hibernate.type.DoubleType@5528a42c]
[TRACE] Skipping duplicate registration of path [address], existing type = [org.hibernate.type.ManyToOneType(model.Address)], incoming type = [org.hibernate.type.ManyToOneType(model.Address)]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [licenceNo], existing type = [org.hibernate.type.LongType@6c451c9c], incoming type = [org.hibernate.type.LongType@6c451c9c]
[TRACE] Skipping duplicate registration of path [valid], existing type = [BasicType adapter for AttributeConverter<Boolean,Character>], incoming type = [BasicType adapter for AttributeConverter<Boolean,Character>]
[TRACE] Skipping duplicate registration of path [flights], existing type = [null], incoming type = [org.hibernate.type.SetType(model.FlightInstructor.flights)]
[TRACE] Skipping duplicate registration of path [students], existing type = [org.hibernate.type.SetType(model.FlightInstructor.students)], incoming type = [org.hibernate.type.SetType(model.FlightInstructor.students)]
[TRACE] Skipping duplicate registration of path [medicalTests], existing type = [org.hibernate.type.StringType@77b21474], incoming type = [org.hibernate.type.StringType@77b21474]
[TRACE] Skipping duplicate registration of path [course], existing type = [org.hibernate.type.ManyToOneType(model.Course)], incoming type = [org.hibernate.type.ManyToOneType(model.Course)]
[TRACE] Skipping duplicate registration of path [course.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [course.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [instructor], existing type = [org.hibernate.type.ManyToOneType(model.FlightInstructor)], incoming type = [org.hibernate.type.ManyToOneType(model.FlightInstructor)]
[TRACE] Skipping duplicate registration of path [instructor.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [instructor.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [flights], existing type = [null], incoming type = [org.hibernate.type.SetType(model.Student.flights)]
[TRACE] Skipping duplicate registration of path [theoryClasses], existing type = [org.hibernate.type.SetType(model.Student.theoryClasses)], incoming type = [org.hibernate.type.SetType(model.Student.theoryClasses)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[DEBUG] Not known whether passed class name [model.Address] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Address
[DEBUG] Not known whether passed class name [model.Address] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Address
[TRACE] Skipping duplicate registration of path [country], existing type = [org.hibernate.type.StringType@77b21474], incoming type = [org.hibernate.type.StringType@77b21474]
[TRACE] Skipping duplicate registration of path [city], existing type = [org.hibernate.type.StringType@77b21474], incoming type = [org.hibernate.type.StringType@77b21474]
[TRACE] Skipping duplicate registration of path [postalCode], existing type = [org.hibernate.type.StringType@77b21474], incoming type = [org.hibernate.type.StringType@77b21474]
[TRACE] Skipping duplicate registration of path [street], existing type = [org.hibernate.type.StringType@77b21474], incoming type = [org.hibernate.type.StringType@77b21474]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [firstName], existing type = [org.hibernate.type.StringType@77b21474], incoming type = [org.hibernate.type.StringType@77b21474]
[TRACE] Skipping duplicate registration of path [secondName], existing type = [org.hibernate.type.StringType@77b21474], incoming type = [org.hibernate.type.StringType@77b21474]
[TRACE] Skipping duplicate registration of path [SSN], existing type = [org.hibernate.type.DoubleType@5528a42c], incoming type = [org.hibernate.type.DoubleType@5528a42c]
[TRACE] Skipping duplicate registration of path [address], existing type = [org.hibernate.type.ManyToOneType(model.Address)], incoming type = [org.hibernate.type.ManyToOneType(model.Address)]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [licenceNo], existing type = [org.hibernate.type.LongType@6c451c9c], incoming type = [org.hibernate.type.LongType@6c451c9c]
[TRACE] Skipping duplicate registration of path [valid], existing type = [BasicType adapter for AttributeConverter<Boolean,Character>], incoming type = [BasicType adapter for AttributeConverter<Boolean,Character>]
[TRACE] Skipping duplicate registration of path [flights], existing type = [org.hibernate.type.SetType(model.FlightInstructor.flights)], incoming type = [org.hibernate.type.SetType(model.FlightInstructor.flights)]
[TRACE] Skipping duplicate registration of path [students], existing type = [org.hibernate.type.SetType(model.FlightInstructor.students)], incoming type = [org.hibernate.type.SetType(model.FlightInstructor.students)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [course.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [instructor.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [firstName], existing type = [org.hibernate.type.StringType@77b21474], incoming type = [org.hibernate.type.StringType@77b21474]
[TRACE] Skipping duplicate registration of path [secondName], existing type = [org.hibernate.type.StringType@77b21474], incoming type = [org.hibernate.type.StringType@77b21474]
[TRACE] Skipping duplicate registration of path [SSN], existing type = [org.hibernate.type.DoubleType@5528a42c], incoming type = [org.hibernate.type.DoubleType@5528a42c]
[TRACE] Skipping duplicate registration of path [address], existing type = [org.hibernate.type.ManyToOneType(model.Address)], incoming type = [org.hibernate.type.ManyToOneType(model.Address)]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [medicalTests], existing type = [org.hibernate.type.StringType@77b21474], incoming type = [org.hibernate.type.StringType@77b21474]
[TRACE] Skipping duplicate registration of path [course], existing type = [org.hibernate.type.ManyToOneType(model.Course)], incoming type = [org.hibernate.type.ManyToOneType(model.Course)]
[TRACE] Skipping duplicate registration of path [course.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [course.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [instructor], existing type = [org.hibernate.type.ManyToOneType(model.FlightInstructor)], incoming type = [org.hibernate.type.ManyToOneType(model.FlightInstructor)]
[TRACE] Skipping duplicate registration of path [instructor.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [instructor.id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [flights], existing type = [org.hibernate.type.SetType(model.Student.flights)], incoming type = [org.hibernate.type.SetType(model.Student.flights)]
[TRACE] Skipping duplicate registration of path [theoryClasses], existing type = [org.hibernate.type.SetType(model.Student.theoryClasses)], incoming type = [org.hibernate.type.SetType(model.Student.theoryClasses)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[DEBUG] Not known whether passed class name [model.TheoryClass] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.TheoryClass
[DEBUG] Not known whether passed class name [model.TheoryClass] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.TheoryClass
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@77b21474], incoming type = [org.hibernate.type.StringType@77b21474]
[TRACE] Skipping duplicate registration of path [hours], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [grade], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[TRACE] Skipping duplicate registration of path [students], existing type = [org.hibernate.type.SetType(model.TheoryClass.students)], incoming type = [org.hibernate.type.SetType(model.TheoryClass.students)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@5bbc9f97], incoming type = [org.hibernate.type.IntegerType@5bbc9f97]
[DEBUG] Static SQL for collection: model.TheoryClass.students
[DEBUG]  Row insert: insert into STUDENTS_CLASSES (CLASS_ID, STUDENT_ID) values (?, ?)
[DEBUG]  Row update: update STUDENTS_CLASSES set STUDENT_ID=? where CLASS_ID=? and STUDENT_ID=?
[DEBUG]  Row delete: delete from STUDENTS_CLASSES where CLASS_ID=? and STUDENT_ID=?
[DEBUG]  One-shot delete: delete from STUDENTS_CLASSES where CLASS_ID=?
[DEBUG] Static SQL for collection: model.FlightInstructor.flights
[DEBUG]  Row insert: update FLIGHTS set INSTRUCTOR_ID=? where FLIGHT_ID=?
[DEBUG]  Row update: update FLIGHTS set  where FLIGHT_ID=?
[DEBUG]  Row delete: update FLIGHTS set INSTRUCTOR_ID=null where INSTRUCTOR_ID=? and FLIGHT_ID=?
[DEBUG]  One-shot delete: update FLIGHTS set INSTRUCTOR_ID=null where INSTRUCTOR_ID=?
[DEBUG] Static SQL for collection: model.Student.theoryClasses
[DEBUG]  Row insert: insert into STUDENTS_CLASSES (STUDENT_ID, CLASS_ID) values (?, ?)
[DEBUG]  Row update: update STUDENTS_CLASSES set CLASS_ID=? where STUDENT_ID=? and CLASS_ID=?
[DEBUG]  Row delete: delete from STUDENTS_CLASSES where STUDENT_ID=? and CLASS_ID=?
[DEBUG]  One-shot delete: delete from STUDENTS_CLASSES where STUDENT_ID=?
[DEBUG] Static SQL for collection: model.Course.students
[DEBUG]  Row insert: update STUDENTS set COURSE_ID=? where STUDENT_ID=?
[DEBUG]  Row update: update STUDENTS set  where STUDENT_ID=?
[DEBUG]  Row delete: update STUDENTS set COURSE_ID=null where COURSE_ID=? and STUDENT_ID=?
[DEBUG]  One-shot delete: update STUDENTS set COURSE_ID=null where COURSE_ID=?
[DEBUG] Static SQL for collection: model.Student.flights
[DEBUG]  Row insert: update FLIGHTS set STUDENT_ID=? where FLIGHT_ID=?
[DEBUG]  Row update: update FLIGHTS set  where FLIGHT_ID=?
[DEBUG]  Row delete: update FLIGHTS set STUDENT_ID=null where STUDENT_ID=? and FLIGHT_ID=?
[DEBUG]  One-shot delete: update FLIGHTS set STUDENT_ID=null where STUDENT_ID=?
[DEBUG] Static SQL for collection: model.FlightInstructor.students
[DEBUG]  Row insert: update STUDENTS set INSTRUCTOR_ID=? where STUDENT_ID=?
[DEBUG]  Row update: update STUDENTS set  where STUDENT_ID=?
[DEBUG]  Row delete: update STUDENTS set INSTRUCTOR_ID=null where INSTRUCTOR_ID=? and STUDENT_ID=?
[DEBUG]  One-shot delete: update STUDENTS set INSTRUCTOR_ID=null where INSTRUCTOR_ID=?
[TRACE] Ignoring subclass attribute definition [model.Person.firstName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Person.secondName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Person.SSN] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Person.address] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Person.firstName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Person.secondName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Person.SSN] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Person.address] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Person.flights] because it is defined in a superclass 
[DEBUG] Static SQL for entity: model.Course
[DEBUG]  Version select: select COURSE_ID from COURSES where COURSE_ID =?
[DEBUG]  Snapshot select: select course_.COURSE_ID, course_.CERT_TYPE as cert_typ2_1_, course_.DESCRIPTION as descript3_1_, course_.START_DATE as start_da4_1_, course_.END_DATE as end_date5_1_ from COURSES course_ where course_.COURSE_ID=?
[DEBUG]  Insert 0: insert into COURSES (CERT_TYPE, DESCRIPTION, START_DATE, END_DATE, COURSE_ID) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update COURSES set CERT_TYPE=?, DESCRIPTION=?, START_DATE=?, END_DATE=? where COURSE_ID=?
[DEBUG]  Delete 0: delete from COURSES where COURSE_ID=?
[DEBUG]  Identity insert: insert into COURSES (CERT_TYPE, DESCRIPTION, START_DATE, END_DATE) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model.Course
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41d16cc3]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b98b809
[TRACE] .. Registering AssociationKey : AssociationKey(table=COURSES, columns={COURSE_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b98b809
[TRACE] >> Starting entity identifier : model.Course
[DEBUG] Visiting attribute path : certType
[TRACE] >> Starting attribute Attribute(name=certType, type=org.hibernate.type.EnumType [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=certType, type=org.hibernate.type.EnumType [non-identifier])
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : startDate
[TRACE] >> Starting attribute Attribute(name=startDate, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=startDate, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : endDate
[TRACE] >> Starting attribute Attribute(name=endDate, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=endDate, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : students
[TRACE] >> Starting attribute Attribute(name=students, type=java.util.Set(model.Course.students) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5dfe23e8]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@164642a4]
[TRACE] << Finishing up attribute : Attribute(name=students, type=java.util.Set(model.Course.students) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b98b809
[TRACE]  Finished root entity : model.Course
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Course)
    - Returns
       - EntityReturnImpl(entity=model.Course, querySpaceUid=<gen:0>, path=model.Course)
          - CollectionAttributeFetchImpl(collection=model.Course.students, querySpaceUid=<gen:1>, path=model.Course.students)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Student, querySpaceUid=<gen:2>, path=model.Course.students.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Course)
          - SQL table alias mapping - course0_
          - alias suffix - 0_
          - suffixed key columns - {course_i1_1_0_}

[DEBUG] Static select for entity model.Course [NONE]: select course0_.COURSE_ID as course_i1_1_0_, course0_.CERT_TYPE as cert_typ2_1_0_, course0_.DESCRIPTION as descript3_1_0_, course0_.START_DATE as start_da4_1_0_, course0_.END_DATE as end_date5_1_0_ from COURSES course0_ where course0_.COURSE_ID=?
[TRACE]  Starting root entity : model.Course
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ba93755]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@22dc59b2
[TRACE] .. Registering AssociationKey : AssociationKey(table=COURSES, columns={COURSE_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@22dc59b2
[TRACE] >> Starting entity identifier : model.Course
[DEBUG] Visiting attribute path : certType
[TRACE] >> Starting attribute Attribute(name=certType, type=org.hibernate.type.EnumType [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=certType, type=org.hibernate.type.EnumType [non-identifier])
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : startDate
[TRACE] >> Starting attribute Attribute(name=startDate, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=startDate, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : endDate
[TRACE] >> Starting attribute Attribute(name=endDate, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=endDate, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : students
[TRACE] >> Starting attribute Attribute(name=students, type=java.util.Set(model.Course.students) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33e434c8]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@546394ed]
[TRACE] << Finishing up attribute : Attribute(name=students, type=java.util.Set(model.Course.students) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@22dc59b2
[TRACE]  Finished root entity : model.Course
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Course)
    - Returns
       - EntityReturnImpl(entity=model.Course, querySpaceUid=<gen:0>, path=model.Course)
          - CollectionAttributeFetchImpl(collection=model.Course.students, querySpaceUid=<gen:1>, path=model.Course.students)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Student, querySpaceUid=<gen:2>, path=model.Course.students.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Course)
          - SQL table alias mapping - course0_
          - alias suffix - 0_
          - suffixed key columns - {course_i1_1_0_}

[DEBUG] Static select for entity model.Course [READ]: select course0_.COURSE_ID as course_i1_1_0_, course0_.CERT_TYPE as cert_typ2_1_0_, course0_.DESCRIPTION as descript3_1_0_, course0_.START_DATE as start_da4_1_0_, course0_.END_DATE as end_date5_1_0_ from COURSES course0_ where course0_.COURSE_ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Course: select course0_.COURSE_ID as course_i1_1_0_, course0_.CERT_TYPE as cert_typ2_1_0_, course0_.DESCRIPTION as descript3_1_0_, course0_.START_DATE as start_da4_1_0_, course0_.END_DATE as end_date5_1_0_ from COURSES course0_ where course0_.COURSE_ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Course: select course0_.COURSE_ID as course_i1_1_0_, course0_.CERT_TYPE as cert_typ2_1_0_, course0_.DESCRIPTION as descript3_1_0_, course0_.START_DATE as start_da4_1_0_, course0_.END_DATE as end_date5_1_0_ from COURSES course0_ where course0_.COURSE_ID=?
[DEBUG] Static SQL for entity: model.Flight
[DEBUG]  Version select: select FLIGHT_ID from FLIGHTS where FLIGHT_ID =?
[DEBUG]  Snapshot select: select flight_.FLIGHT_ID, flight_.DESCRIPTION as descript2_3_, flight_.DATE as date3_3_, flight_.STUDENT_ID as student_4_3_, flight_.INSTRUCTOR_ID as instruct5_3_ from FLIGHTS flight_ where flight_.FLIGHT_ID=?
[DEBUG]  Insert 0: insert into FLIGHTS (DESCRIPTION, DATE, STUDENT_ID, INSTRUCTOR_ID, FLIGHT_ID) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update FLIGHTS set DESCRIPTION=?, DATE=?, STUDENT_ID=?, INSTRUCTOR_ID=? where FLIGHT_ID=?
[DEBUG]  Delete 0: delete from FLIGHTS where FLIGHT_ID=?
[DEBUG]  Identity insert: insert into FLIGHTS (DESCRIPTION, DATE, STUDENT_ID, INSTRUCTOR_ID) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model.Flight
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f0d09c]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@47acd13b
[TRACE] .. Registering AssociationKey : AssociationKey(table=FLIGHTS, columns={FLIGHT_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@47acd13b
[TRACE] >> Starting entity identifier : model.Flight
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : student
[TRACE] >> Starting attribute Attribute(name=student, type=model.Student [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8e9d06]
[TRACE] << Finishing up attribute : Attribute(name=student, type=model.Student [non-identifier,association])
[DEBUG] Visiting attribute path : instructor
[TRACE] >> Starting attribute Attribute(name=instructor, type=model.FlightInstructor [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@733c464f]
[TRACE] << Finishing up attribute : Attribute(name=instructor, type=model.FlightInstructor [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@47acd13b
[TRACE]  Finished root entity : model.Flight
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Flight)
    - Returns
       - EntityReturnImpl(entity=model.Flight, querySpaceUid=<gen:0>, path=model.Flight)
          - EntityAttributeFetchImpl(entity=model.Student, querySpaceUid=<gen:1>, path=model.Flight.student)
          - EntityAttributeFetchImpl(entity=model.FlightInstructor, querySpaceUid=<gen:2>, path=model.Flight.instructor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Flight)
          - SQL table alias mapping - flight0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_3_0_}

[DEBUG] Static select for entity model.Flight [NONE]: select flight0_.FLIGHT_ID as flight_i1_3_0_, flight0_.DESCRIPTION as descript2_3_0_, flight0_.DATE as date3_3_0_, flight0_.STUDENT_ID as student_4_3_0_, flight0_.INSTRUCTOR_ID as instruct5_3_0_ from FLIGHTS flight0_ where flight0_.FLIGHT_ID=?
[TRACE]  Starting root entity : model.Flight
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47272cd3]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@73fbdf68
[TRACE] .. Registering AssociationKey : AssociationKey(table=FLIGHTS, columns={FLIGHT_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@73fbdf68
[TRACE] >> Starting entity identifier : model.Flight
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : student
[TRACE] >> Starting attribute Attribute(name=student, type=model.Student [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32f1fafe]
[TRACE] << Finishing up attribute : Attribute(name=student, type=model.Student [non-identifier,association])
[DEBUG] Visiting attribute path : instructor
[TRACE] >> Starting attribute Attribute(name=instructor, type=model.FlightInstructor [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@236eccd1]
[TRACE] << Finishing up attribute : Attribute(name=instructor, type=model.FlightInstructor [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@73fbdf68
[TRACE]  Finished root entity : model.Flight
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Flight)
    - Returns
       - EntityReturnImpl(entity=model.Flight, querySpaceUid=<gen:0>, path=model.Flight)
          - EntityAttributeFetchImpl(entity=model.Student, querySpaceUid=<gen:1>, path=model.Flight.student)
          - EntityAttributeFetchImpl(entity=model.FlightInstructor, querySpaceUid=<gen:2>, path=model.Flight.instructor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Flight)
          - SQL table alias mapping - flight0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_3_0_}

[DEBUG] Static select for entity model.Flight [READ]: select flight0_.FLIGHT_ID as flight_i1_3_0_, flight0_.DESCRIPTION as descript2_3_0_, flight0_.DATE as date3_3_0_, flight0_.STUDENT_ID as student_4_3_0_, flight0_.INSTRUCTOR_ID as instruct5_3_0_ from FLIGHTS flight0_ where flight0_.FLIGHT_ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Flight: select flight0_.FLIGHT_ID as flight_i1_3_0_, flight0_.DESCRIPTION as descript2_3_0_, flight0_.DATE as date3_3_0_, flight0_.STUDENT_ID as student_4_3_0_, flight0_.INSTRUCTOR_ID as instruct5_3_0_ from FLIGHTS flight0_ where flight0_.FLIGHT_ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Flight: select flight0_.FLIGHT_ID as flight_i1_3_0_, flight0_.DESCRIPTION as descript2_3_0_, flight0_.DATE as date3_3_0_, flight0_.STUDENT_ID as student_4_3_0_, flight0_.INSTRUCTOR_ID as instruct5_3_0_ from FLIGHTS flight0_ where flight0_.FLIGHT_ID=?
[DEBUG] Static SQL for entity: model.Person
[DEBUG]  Version select: select PERSON_ID from PERSONS where PERSON_ID =?
[DEBUG]  Snapshot select: select person_.PERSON_ID, person_.FIRST_NAME as first_na2_4_, person_.SECOND_NAME as second_n3_4_, person_.SSN as ssn4_4_, person_.ADDRESS_ID as address_5_4_ from PERSONS person_ where person_.PERSON_ID=?
[DEBUG]  Insert 0: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID, PERSON_ID) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update PERSONS set FIRST_NAME=?, SECOND_NAME=?, SSN=?, ADDRESS_ID=? where PERSON_ID=?
[DEBUG]  Delete 0: delete from PERSONS where PERSON_ID=?
[DEBUG]  Identity insert: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d512ddb]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@707ca986
[TRACE] .. Registering AssociationKey : AssociationKey(table=PERSONS, columns={PERSON_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@707ca986
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : firstName
[TRACE] >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
[DEBUG] Visiting attribute path : secondName
[TRACE] >> Starting attribute Attribute(name=secondName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=secondName, type=string [non-identifier])
[DEBUG] Visiting attribute path : SSN
[TRACE] >> Starting attribute Attribute(name=SSN, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=SSN, type=double [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4de79b7d]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model.Address [non-identifier,association])
[DEBUG] Visiting attribute path : licenceNo
[TRACE] >> Starting attribute Attribute(name=licenceNo, type=long [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=licenceNo, type=long [non-identifier])
[DEBUG] Visiting attribute path : valid
[TRACE] >> Starting attribute Attribute(name=valid, type=converted::goodies.BooleanConverter [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=valid, type=converted::goodies.BooleanConverter [non-identifier])
[DEBUG] Visiting attribute path : flights
[DEBUG] Visiting attribute path : students
[TRACE] >> Starting attribute Attribute(name=students, type=java.util.Set(model.FlightInstructor.students) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@183ade54]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c51077d]
[TRACE] << Finishing up attribute : Attribute(name=students, type=java.util.Set(model.FlightInstructor.students) [non-identifier,association])
[DEBUG] Visiting attribute path : medicalTests
[TRACE] >> Starting attribute Attribute(name=medicalTests, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=medicalTests, type=string [non-identifier])
[DEBUG] Visiting attribute path : course
[TRACE] >> Starting attribute Attribute(name=course, type=model.Course [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5974b7e8]
[TRACE] << Finishing up attribute : Attribute(name=course, type=model.Course [non-identifier,association])
[DEBUG] Visiting attribute path : instructor
[TRACE] >> Starting attribute Attribute(name=instructor, type=model.FlightInstructor [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2839e3c8]
[TRACE] << Finishing up attribute : Attribute(name=instructor, type=model.FlightInstructor [non-identifier,association])
[DEBUG] Visiting attribute path : theoryClasses
[TRACE] >> Starting attribute Attribute(name=theoryClasses, type=java.util.Set(model.Student.theoryClasses) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66bf40e5]
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2291d9a0]
[TRACE] << Finishing up attribute : Attribute(name=theoryClasses, type=java.util.Set(model.Student.theoryClasses) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@707ca986
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
          - EntityAttributeFetchImpl(entity=model.Address, querySpaceUid=<gen:1>, path=model.Person.address)
          - CollectionAttributeFetchImpl(collection=model.FlightInstructor.students, querySpaceUid=<gen:2>, path=model.Person.students)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Student, querySpaceUid=<gen:3>, path=model.Person.students.<elements>)
          - EntityAttributeFetchImpl(entity=model.Course, querySpaceUid=<gen:4>, path=model.Person.course)
          - EntityAttributeFetchImpl(entity=model.FlightInstructor, querySpaceUid=<gen:5>, path=model.Person.instructor)
          - CollectionAttributeFetchImpl(collection=model.Student.theoryClasses, querySpaceUid=<gen:6>, path=model.Person.theoryClasses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.TheoryClass, querySpaceUid=<gen:7>, path=model.Person.theoryClasses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_4_0_}

[DEBUG] Static select for entity model.Person [NONE]: select person0_.PERSON_ID as person_i1_4_0_, person0_.FIRST_NAME as first_na2_4_0_, person0_.SECOND_NAME as second_n3_4_0_, person0_.SSN as ssn4_4_0_, person0_.ADDRESS_ID as address_5_4_0_, person0_1_.LICENCE_NO as licence_2_2_0_, person0_1_.valid as valid3_2_0_, person0_2_.MEDICAL_TESTS as medical_2_5_0_, person0_2_.COURSE_ID as course_i3_5_0_, person0_2_.INSTRUCTOR_ID as instruct4_5_0_, case when person0_1_.INSTRUCTOR_ID is not null then 1 when person0_2_.STUDENT_ID is not null then 2 when person0_.PERSON_ID is not null then 0 end as clazz_0_ from PERSONS person0_ left outer join FLIGHT_INSTRUCTORS person0_1_ on person0_.PERSON_ID=person0_1_.INSTRUCTOR_ID left outer join STUDENTS person0_2_ on person0_.PERSON_ID=person0_2_.STUDENT_ID where person0_.PERSON_ID=?
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a6c7f42]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5a515e5d
[TRACE] .. Registering AssociationKey : AssociationKey(table=PERSONS, columns={PERSON_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5a515e5d
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : firstName
[TRACE] >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
[DEBUG] Visiting attribute path : secondName
[TRACE] >> Starting attribute Attribute(name=secondName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=secondName, type=string [non-identifier])
[DEBUG] Visiting attribute path : SSN
[TRACE] >> Starting attribute Attribute(name=SSN, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=SSN, type=double [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@423a0e1d]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model.Address [non-identifier,association])
[DEBUG] Visiting attribute path : licenceNo
[TRACE] >> Starting attribute Attribute(name=licenceNo, type=long [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=licenceNo, type=long [non-identifier])
[DEBUG] Visiting attribute path : valid
[TRACE] >> Starting attribute Attribute(name=valid, type=converted::goodies.BooleanConverter [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=valid, type=converted::goodies.BooleanConverter [non-identifier])
[DEBUG] Visiting attribute path : flights
[DEBUG] Visiting attribute path : students
[TRACE] >> Starting attribute Attribute(name=students, type=java.util.Set(model.FlightInstructor.students) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32f32623]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3becc950]
[TRACE] << Finishing up attribute : Attribute(name=students, type=java.util.Set(model.FlightInstructor.students) [non-identifier,association])
[DEBUG] Visiting attribute path : medicalTests
[TRACE] >> Starting attribute Attribute(name=medicalTests, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=medicalTests, type=string [non-identifier])
[DEBUG] Visiting attribute path : course
[TRACE] >> Starting attribute Attribute(name=course, type=model.Course [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b9fdbc6]
[TRACE] << Finishing up attribute : Attribute(name=course, type=model.Course [non-identifier,association])
[DEBUG] Visiting attribute path : instructor
[TRACE] >> Starting attribute Attribute(name=instructor, type=model.FlightInstructor [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79476a4e]
[TRACE] << Finishing up attribute : Attribute(name=instructor, type=model.FlightInstructor [non-identifier,association])
[DEBUG] Visiting attribute path : theoryClasses
[TRACE] >> Starting attribute Attribute(name=theoryClasses, type=java.util.Set(model.Student.theoryClasses) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52ae997b]
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f557c37]
[TRACE] << Finishing up attribute : Attribute(name=theoryClasses, type=java.util.Set(model.Student.theoryClasses) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5a515e5d
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
          - EntityAttributeFetchImpl(entity=model.Address, querySpaceUid=<gen:1>, path=model.Person.address)
          - CollectionAttributeFetchImpl(collection=model.FlightInstructor.students, querySpaceUid=<gen:2>, path=model.Person.students)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Student, querySpaceUid=<gen:3>, path=model.Person.students.<elements>)
          - EntityAttributeFetchImpl(entity=model.Course, querySpaceUid=<gen:4>, path=model.Person.course)
          - EntityAttributeFetchImpl(entity=model.FlightInstructor, querySpaceUid=<gen:5>, path=model.Person.instructor)
          - CollectionAttributeFetchImpl(collection=model.Student.theoryClasses, querySpaceUid=<gen:6>, path=model.Person.theoryClasses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.TheoryClass, querySpaceUid=<gen:7>, path=model.Person.theoryClasses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_4_0_}

[DEBUG] Static select for entity model.Person [READ]: select person0_.PERSON_ID as person_i1_4_0_, person0_.FIRST_NAME as first_na2_4_0_, person0_.SECOND_NAME as second_n3_4_0_, person0_.SSN as ssn4_4_0_, person0_.ADDRESS_ID as address_5_4_0_, person0_1_.LICENCE_NO as licence_2_2_0_, person0_1_.valid as valid3_2_0_, person0_2_.MEDICAL_TESTS as medical_2_5_0_, person0_2_.COURSE_ID as course_i3_5_0_, person0_2_.INSTRUCTOR_ID as instruct4_5_0_, case when person0_1_.INSTRUCTOR_ID is not null then 1 when person0_2_.STUDENT_ID is not null then 2 when person0_.PERSON_ID is not null then 0 end as clazz_0_ from PERSONS person0_ left outer join FLIGHT_INSTRUCTORS person0_1_ on person0_.PERSON_ID=person0_1_.INSTRUCTOR_ID left outer join STUDENTS person0_2_ on person0_.PERSON_ID=person0_2_.STUDENT_ID where person0_.PERSON_ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Person: select person0_.PERSON_ID as person_i1_4_0_, person0_.FIRST_NAME as first_na2_4_0_, person0_.SECOND_NAME as second_n3_4_0_, person0_.SSN as ssn4_4_0_, person0_.ADDRESS_ID as address_5_4_0_, person0_1_.LICENCE_NO as licence_2_2_0_, person0_1_.valid as valid3_2_0_, person0_2_.MEDICAL_TESTS as medical_2_5_0_, person0_2_.COURSE_ID as course_i3_5_0_, person0_2_.INSTRUCTOR_ID as instruct4_5_0_, case when person0_1_.INSTRUCTOR_ID is not null then 1 when person0_2_.STUDENT_ID is not null then 2 when person0_.PERSON_ID is not null then 0 end as clazz_0_ from PERSONS person0_ left outer join FLIGHT_INSTRUCTORS person0_1_ on person0_.PERSON_ID=person0_1_.INSTRUCTOR_ID left outer join STUDENTS person0_2_ on person0_.PERSON_ID=person0_2_.STUDENT_ID where person0_.PERSON_ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Person: select person0_.PERSON_ID as person_i1_4_0_, person0_.FIRST_NAME as first_na2_4_0_, person0_.SECOND_NAME as second_n3_4_0_, person0_.SSN as ssn4_4_0_, person0_.ADDRESS_ID as address_5_4_0_, person0_1_.LICENCE_NO as licence_2_2_0_, person0_1_.valid as valid3_2_0_, person0_2_.MEDICAL_TESTS as medical_2_5_0_, person0_2_.COURSE_ID as course_i3_5_0_, person0_2_.INSTRUCTOR_ID as instruct4_5_0_, case when person0_1_.INSTRUCTOR_ID is not null then 1 when person0_2_.STUDENT_ID is not null then 2 when person0_.PERSON_ID is not null then 0 end as clazz_0_ from PERSONS person0_ left outer join FLIGHT_INSTRUCTORS person0_1_ on person0_.PERSON_ID=person0_1_.INSTRUCTOR_ID left outer join STUDENTS person0_2_ on person0_.PERSON_ID=person0_2_.STUDENT_ID where person0_.PERSON_ID=?
[DEBUG] Static SQL for entity: model.Address
[DEBUG]  Version select: select ADDRESS_ID from ADDRESSES where ADDRESS_ID =?
[DEBUG]  Snapshot select: select address_.ADDRESS_ID, address_.COUNTRY as country2_0_, address_.CITY as city3_0_, address_.POSTAL_CODE as postal_c4_0_, address_.STREET as street5_0_ from ADDRESSES address_ where address_.ADDRESS_ID=?
[DEBUG]  Insert 0: insert into ADDRESSES (COUNTRY, CITY, POSTAL_CODE, STREET, ADDRESS_ID) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update ADDRESSES set COUNTRY=?, CITY=?, POSTAL_CODE=?, STREET=? where ADDRESS_ID=?
[DEBUG]  Delete 0: delete from ADDRESSES where ADDRESS_ID=?
[DEBUG]  Identity insert: insert into ADDRESSES (COUNTRY, CITY, POSTAL_CODE, STREET) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model.Address
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a01d7f0]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5856dbe4
[TRACE] .. Registering AssociationKey : AssociationKey(table=ADDRESSES, columns={ADDRESS_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5856dbe4
[TRACE] >> Starting entity identifier : model.Address
[DEBUG] Visiting attribute path : country
[TRACE] >> Starting attribute Attribute(name=country, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=country, type=string [non-identifier])
[DEBUG] Visiting attribute path : city
[TRACE] >> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : postalCode
[TRACE] >> Starting attribute Attribute(name=postalCode, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=postalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : street
[TRACE] >> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5856dbe4
[TRACE]  Finished root entity : model.Address
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Address)
    - Returns
       - EntityReturnImpl(entity=model.Address, querySpaceUid=<gen:0>, path=model.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

[DEBUG] Static select for entity model.Address [NONE]: select address0_.ADDRESS_ID as address_1_0_0_, address0_.COUNTRY as country2_0_0_, address0_.CITY as city3_0_0_, address0_.POSTAL_CODE as postal_c4_0_0_, address0_.STREET as street5_0_0_ from ADDRESSES address0_ where address0_.ADDRESS_ID=?
[TRACE]  Starting root entity : model.Address
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e15f4d4]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5a058be5
[TRACE] .. Registering AssociationKey : AssociationKey(table=ADDRESSES, columns={ADDRESS_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5a058be5
[TRACE] >> Starting entity identifier : model.Address
[DEBUG] Visiting attribute path : country
[TRACE] >> Starting attribute Attribute(name=country, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=country, type=string [non-identifier])
[DEBUG] Visiting attribute path : city
[TRACE] >> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : postalCode
[TRACE] >> Starting attribute Attribute(name=postalCode, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=postalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : street
[TRACE] >> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5a058be5
[TRACE]  Finished root entity : model.Address
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Address)
    - Returns
       - EntityReturnImpl(entity=model.Address, querySpaceUid=<gen:0>, path=model.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

[DEBUG] Static select for entity model.Address [READ]: select address0_.ADDRESS_ID as address_1_0_0_, address0_.COUNTRY as country2_0_0_, address0_.CITY as city3_0_0_, address0_.POSTAL_CODE as postal_c4_0_0_, address0_.STREET as street5_0_0_ from ADDRESSES address0_ where address0_.ADDRESS_ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Address: select address0_.ADDRESS_ID as address_1_0_0_, address0_.COUNTRY as country2_0_0_, address0_.CITY as city3_0_0_, address0_.POSTAL_CODE as postal_c4_0_0_, address0_.STREET as street5_0_0_ from ADDRESSES address0_ where address0_.ADDRESS_ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Address: select address0_.ADDRESS_ID as address_1_0_0_, address0_.COUNTRY as country2_0_0_, address0_.CITY as city3_0_0_, address0_.POSTAL_CODE as postal_c4_0_0_, address0_.STREET as street5_0_0_ from ADDRESSES address0_ where address0_.ADDRESS_ID=?
[DEBUG] Static SQL for entity: model.FlightInstructor
[DEBUG]  Version select: select PERSON_ID from PERSONS where PERSON_ID =?
[DEBUG]  Snapshot select: select flightinst_.INSTRUCTOR_ID, flightinst_1_.FIRST_NAME as first_na2_4_, flightinst_1_.SECOND_NAME as second_n3_4_, flightinst_1_.SSN as ssn4_4_, flightinst_1_.ADDRESS_ID as address_5_4_, flightinst_.LICENCE_NO as licence_2_2_, flightinst_.valid as valid3_2_ from FLIGHT_INSTRUCTORS flightinst_ inner join PERSONS flightinst_1_ on flightinst_.INSTRUCTOR_ID=flightinst_1_.PERSON_ID where flightinst_.INSTRUCTOR_ID=?
[DEBUG]  Insert 0: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID, PERSON_ID) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update PERSONS set FIRST_NAME=?, SECOND_NAME=?, SSN=?, ADDRESS_ID=? where PERSON_ID=?
[DEBUG]  Delete 0: delete from PERSONS where PERSON_ID=?
[DEBUG]  Insert 1: insert into FLIGHT_INSTRUCTORS (LICENCE_NO, valid, INSTRUCTOR_ID) values (?, ?, ?)
[DEBUG]  Update 1: update FLIGHT_INSTRUCTORS set LICENCE_NO=?, valid=? where INSTRUCTOR_ID=?
[DEBUG]  Delete 1: delete from FLIGHT_INSTRUCTORS where INSTRUCTOR_ID=?
[DEBUG]  Identity insert: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model.FlightInstructor
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eaf7902]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@20c812c8
[TRACE] .. Registering AssociationKey : AssociationKey(table=FLIGHT_INSTRUCTORS, columns={INSTRUCTOR_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@20c812c8
[TRACE] >> Starting entity identifier : model.FlightInstructor
[DEBUG] Visiting attribute path : firstName
[TRACE] >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
[DEBUG] Visiting attribute path : secondName
[TRACE] >> Starting attribute Attribute(name=secondName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=secondName, type=string [non-identifier])
[DEBUG] Visiting attribute path : SSN
[TRACE] >> Starting attribute Attribute(name=SSN, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=SSN, type=double [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71aaf151]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model.Address [non-identifier,association])
[DEBUG] Visiting attribute path : licenceNo
[TRACE] >> Starting attribute Attribute(name=licenceNo, type=long [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=licenceNo, type=long [non-identifier])
[DEBUG] Visiting attribute path : valid
[TRACE] >> Starting attribute Attribute(name=valid, type=converted::goodies.BooleanConverter [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=valid, type=converted::goodies.BooleanConverter [non-identifier])
[DEBUG] Visiting attribute path : flights
[TRACE] >> Starting attribute Attribute(name=flights, type=java.util.Set(model.FlightInstructor.flights) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7061622]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32d418a9]
[TRACE] << Finishing up attribute : Attribute(name=flights, type=java.util.Set(model.FlightInstructor.flights) [non-identifier,association])
[DEBUG] Visiting attribute path : students
[TRACE] >> Starting attribute Attribute(name=students, type=java.util.Set(model.FlightInstructor.students) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52ea0269]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@746c411c]
[TRACE] << Finishing up attribute : Attribute(name=students, type=java.util.Set(model.FlightInstructor.students) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@20c812c8
[TRACE]  Finished root entity : model.FlightInstructor
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.FlightInstructor)
    - Returns
       - EntityReturnImpl(entity=model.FlightInstructor, querySpaceUid=<gen:0>, path=model.FlightInstructor)
          - EntityAttributeFetchImpl(entity=model.Address, querySpaceUid=<gen:1>, path=model.FlightInstructor.address)
          - CollectionAttributeFetchImpl(collection=model.FlightInstructor.flights, querySpaceUid=<gen:2>, path=model.FlightInstructor.flights)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Flight, querySpaceUid=<gen:3>, path=model.FlightInstructor.flights.<elements>)
          - CollectionAttributeFetchImpl(collection=model.FlightInstructor.students, querySpaceUid=<gen:4>, path=model.FlightInstructor.students)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Student, querySpaceUid=<gen:5>, path=model.FlightInstructor.students.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.FlightInstructor)
          - SQL table alias mapping - flightinst0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_4_0_}

[DEBUG] Static select for entity model.FlightInstructor [NONE]: select flightinst0_.INSTRUCTOR_ID as person_i1_4_0_, flightinst0_1_.FIRST_NAME as first_na2_4_0_, flightinst0_1_.SECOND_NAME as second_n3_4_0_, flightinst0_1_.SSN as ssn4_4_0_, flightinst0_1_.ADDRESS_ID as address_5_4_0_, flightinst0_.LICENCE_NO as licence_2_2_0_, flightinst0_.valid as valid3_2_0_ from FLIGHT_INSTRUCTORS flightinst0_ inner join PERSONS flightinst0_1_ on flightinst0_.INSTRUCTOR_ID=flightinst0_1_.PERSON_ID where flightinst0_.INSTRUCTOR_ID=?
[TRACE]  Starting root entity : model.FlightInstructor
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ecfeb5]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@51efb731
[TRACE] .. Registering AssociationKey : AssociationKey(table=FLIGHT_INSTRUCTORS, columns={INSTRUCTOR_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@51efb731
[TRACE] >> Starting entity identifier : model.FlightInstructor
[DEBUG] Visiting attribute path : firstName
[TRACE] >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
[DEBUG] Visiting attribute path : secondName
[TRACE] >> Starting attribute Attribute(name=secondName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=secondName, type=string [non-identifier])
[DEBUG] Visiting attribute path : SSN
[TRACE] >> Starting attribute Attribute(name=SSN, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=SSN, type=double [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53940e2f]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model.Address [non-identifier,association])
[DEBUG] Visiting attribute path : licenceNo
[TRACE] >> Starting attribute Attribute(name=licenceNo, type=long [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=licenceNo, type=long [non-identifier])
[DEBUG] Visiting attribute path : valid
[TRACE] >> Starting attribute Attribute(name=valid, type=converted::goodies.BooleanConverter [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=valid, type=converted::goodies.BooleanConverter [non-identifier])
[DEBUG] Visiting attribute path : flights
[TRACE] >> Starting attribute Attribute(name=flights, type=java.util.Set(model.FlightInstructor.flights) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45e6d1e0]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61db86bf]
[TRACE] << Finishing up attribute : Attribute(name=flights, type=java.util.Set(model.FlightInstructor.flights) [non-identifier,association])
[DEBUG] Visiting attribute path : students
[TRACE] >> Starting attribute Attribute(name=students, type=java.util.Set(model.FlightInstructor.students) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4da1f38a]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e377967]
[TRACE] << Finishing up attribute : Attribute(name=students, type=java.util.Set(model.FlightInstructor.students) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@51efb731
[TRACE]  Finished root entity : model.FlightInstructor
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.FlightInstructor)
    - Returns
       - EntityReturnImpl(entity=model.FlightInstructor, querySpaceUid=<gen:0>, path=model.FlightInstructor)
          - EntityAttributeFetchImpl(entity=model.Address, querySpaceUid=<gen:1>, path=model.FlightInstructor.address)
          - CollectionAttributeFetchImpl(collection=model.FlightInstructor.flights, querySpaceUid=<gen:2>, path=model.FlightInstructor.flights)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Flight, querySpaceUid=<gen:3>, path=model.FlightInstructor.flights.<elements>)
          - CollectionAttributeFetchImpl(collection=model.FlightInstructor.students, querySpaceUid=<gen:4>, path=model.FlightInstructor.students)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Student, querySpaceUid=<gen:5>, path=model.FlightInstructor.students.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.FlightInstructor)
          - SQL table alias mapping - flightinst0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_4_0_}

[DEBUG] Static select for entity model.FlightInstructor [READ]: select flightinst0_.INSTRUCTOR_ID as person_i1_4_0_, flightinst0_1_.FIRST_NAME as first_na2_4_0_, flightinst0_1_.SECOND_NAME as second_n3_4_0_, flightinst0_1_.SSN as ssn4_4_0_, flightinst0_1_.ADDRESS_ID as address_5_4_0_, flightinst0_.LICENCE_NO as licence_2_2_0_, flightinst0_.valid as valid3_2_0_ from FLIGHT_INSTRUCTORS flightinst0_ inner join PERSONS flightinst0_1_ on flightinst0_.INSTRUCTOR_ID=flightinst0_1_.PERSON_ID where flightinst0_.INSTRUCTOR_ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.FlightInstructor: select flightinst0_.INSTRUCTOR_ID as person_i1_4_0_, flightinst0_1_.FIRST_NAME as first_na2_4_0_, flightinst0_1_.SECOND_NAME as second_n3_4_0_, flightinst0_1_.SSN as ssn4_4_0_, flightinst0_1_.ADDRESS_ID as address_5_4_0_, flightinst0_.LICENCE_NO as licence_2_2_0_, flightinst0_.valid as valid3_2_0_ from FLIGHT_INSTRUCTORS flightinst0_ inner join PERSONS flightinst0_1_ on flightinst0_.INSTRUCTOR_ID=flightinst0_1_.PERSON_ID where flightinst0_.INSTRUCTOR_ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.FlightInstructor: select flightinst0_.INSTRUCTOR_ID as person_i1_4_0_, flightinst0_1_.FIRST_NAME as first_na2_4_0_, flightinst0_1_.SECOND_NAME as second_n3_4_0_, flightinst0_1_.SSN as ssn4_4_0_, flightinst0_1_.ADDRESS_ID as address_5_4_0_, flightinst0_.LICENCE_NO as licence_2_2_0_, flightinst0_.valid as valid3_2_0_ from FLIGHT_INSTRUCTORS flightinst0_ inner join PERSONS flightinst0_1_ on flightinst0_.INSTRUCTOR_ID=flightinst0_1_.PERSON_ID where flightinst0_.INSTRUCTOR_ID=?
[DEBUG] Static SQL for entity: model.Student
[DEBUG]  Version select: select PERSON_ID from PERSONS where PERSON_ID =?
[DEBUG]  Snapshot select: select student_.STUDENT_ID, student_1_.FIRST_NAME as first_na2_4_, student_1_.SECOND_NAME as second_n3_4_, student_1_.SSN as ssn4_4_, student_1_.ADDRESS_ID as address_5_4_, student_.MEDICAL_TESTS as medical_2_5_, student_.COURSE_ID as course_i3_5_, student_.INSTRUCTOR_ID as instruct4_5_ from STUDENTS student_ inner join PERSONS student_1_ on student_.STUDENT_ID=student_1_.PERSON_ID where student_.STUDENT_ID=?
[DEBUG]  Insert 0: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID, PERSON_ID) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update PERSONS set FIRST_NAME=?, SECOND_NAME=?, SSN=?, ADDRESS_ID=? where PERSON_ID=?
[DEBUG]  Delete 0: delete from PERSONS where PERSON_ID=?
[DEBUG]  Insert 1: insert into STUDENTS (MEDICAL_TESTS, COURSE_ID, INSTRUCTOR_ID, STUDENT_ID) values (?, ?, ?, ?)
[DEBUG]  Update 1: update STUDENTS set MEDICAL_TESTS=?, COURSE_ID=?, INSTRUCTOR_ID=? where STUDENT_ID=?
[DEBUG]  Delete 1: delete from STUDENTS where STUDENT_ID=?
[DEBUG]  Identity insert: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model.Student
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dadd690]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@707e4fe4
[TRACE] .. Registering AssociationKey : AssociationKey(table=STUDENTS, columns={STUDENT_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@707e4fe4
[TRACE] >> Starting entity identifier : model.Student
[DEBUG] Visiting attribute path : firstName
[TRACE] >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
[DEBUG] Visiting attribute path : secondName
[TRACE] >> Starting attribute Attribute(name=secondName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=secondName, type=string [non-identifier])
[DEBUG] Visiting attribute path : SSN
[TRACE] >> Starting attribute Attribute(name=SSN, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=SSN, type=double [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3281dfc2]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model.Address [non-identifier,association])
[DEBUG] Visiting attribute path : medicalTests
[TRACE] >> Starting attribute Attribute(name=medicalTests, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=medicalTests, type=string [non-identifier])
[DEBUG] Visiting attribute path : course
[TRACE] >> Starting attribute Attribute(name=course, type=model.Course [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@377874b4]
[TRACE] << Finishing up attribute : Attribute(name=course, type=model.Course [non-identifier,association])
[DEBUG] Visiting attribute path : instructor
[TRACE] >> Starting attribute Attribute(name=instructor, type=model.FlightInstructor [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14422d9d]
[TRACE] << Finishing up attribute : Attribute(name=instructor, type=model.FlightInstructor [non-identifier,association])
[DEBUG] Visiting attribute path : flights
[TRACE] >> Starting attribute Attribute(name=flights, type=java.util.Set(model.Student.flights) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16c1519e]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a02e34b]
[TRACE] << Finishing up attribute : Attribute(name=flights, type=java.util.Set(model.Student.flights) [non-identifier,association])
[DEBUG] Visiting attribute path : theoryClasses
[TRACE] >> Starting attribute Attribute(name=theoryClasses, type=java.util.Set(model.Student.theoryClasses) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5eabff6b]
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b000fe6]
[TRACE] << Finishing up attribute : Attribute(name=theoryClasses, type=java.util.Set(model.Student.theoryClasses) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@707e4fe4
[TRACE]  Finished root entity : model.Student
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Student)
    - Returns
       - EntityReturnImpl(entity=model.Student, querySpaceUid=<gen:0>, path=model.Student)
          - EntityAttributeFetchImpl(entity=model.Address, querySpaceUid=<gen:1>, path=model.Student.address)
          - EntityAttributeFetchImpl(entity=model.Course, querySpaceUid=<gen:2>, path=model.Student.course)
          - EntityAttributeFetchImpl(entity=model.FlightInstructor, querySpaceUid=<gen:3>, path=model.Student.instructor)
          - CollectionAttributeFetchImpl(collection=model.Student.flights, querySpaceUid=<gen:4>, path=model.Student.flights)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Flight, querySpaceUid=<gen:5>, path=model.Student.flights.<elements>)
          - CollectionAttributeFetchImpl(collection=model.Student.theoryClasses, querySpaceUid=<gen:6>, path=model.Student.theoryClasses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.TheoryClass, querySpaceUid=<gen:7>, path=model.Student.theoryClasses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_4_0_}

[DEBUG] Static select for entity model.Student [NONE]: select student0_.STUDENT_ID as person_i1_4_0_, student0_1_.FIRST_NAME as first_na2_4_0_, student0_1_.SECOND_NAME as second_n3_4_0_, student0_1_.SSN as ssn4_4_0_, student0_1_.ADDRESS_ID as address_5_4_0_, student0_.MEDICAL_TESTS as medical_2_5_0_, student0_.COURSE_ID as course_i3_5_0_, student0_.INSTRUCTOR_ID as instruct4_5_0_ from STUDENTS student0_ inner join PERSONS student0_1_ on student0_.STUDENT_ID=student0_1_.PERSON_ID where student0_.STUDENT_ID=?
[TRACE]  Starting root entity : model.Student
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4751e8b9]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7af443a3
[TRACE] .. Registering AssociationKey : AssociationKey(table=STUDENTS, columns={STUDENT_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7af443a3
[TRACE] >> Starting entity identifier : model.Student
[DEBUG] Visiting attribute path : firstName
[TRACE] >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
[DEBUG] Visiting attribute path : secondName
[TRACE] >> Starting attribute Attribute(name=secondName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=secondName, type=string [non-identifier])
[DEBUG] Visiting attribute path : SSN
[TRACE] >> Starting attribute Attribute(name=SSN, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=SSN, type=double [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b25ab31]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model.Address [non-identifier,association])
[DEBUG] Visiting attribute path : medicalTests
[TRACE] >> Starting attribute Attribute(name=medicalTests, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=medicalTests, type=string [non-identifier])
[DEBUG] Visiting attribute path : course
[TRACE] >> Starting attribute Attribute(name=course, type=model.Course [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2001e48c]
[TRACE] << Finishing up attribute : Attribute(name=course, type=model.Course [non-identifier,association])
[DEBUG] Visiting attribute path : instructor
[TRACE] >> Starting attribute Attribute(name=instructor, type=model.FlightInstructor [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ddd415]
[TRACE] << Finishing up attribute : Attribute(name=instructor, type=model.FlightInstructor [non-identifier,association])
[DEBUG] Visiting attribute path : flights
[TRACE] >> Starting attribute Attribute(name=flights, type=java.util.Set(model.Student.flights) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@306c7bf6]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@664632e9]
[TRACE] << Finishing up attribute : Attribute(name=flights, type=java.util.Set(model.Student.flights) [non-identifier,association])
[DEBUG] Visiting attribute path : theoryClasses
[TRACE] >> Starting attribute Attribute(name=theoryClasses, type=java.util.Set(model.Student.theoryClasses) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@494c8f29]
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f379769]
[TRACE] << Finishing up attribute : Attribute(name=theoryClasses, type=java.util.Set(model.Student.theoryClasses) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7af443a3
[TRACE]  Finished root entity : model.Student
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Student)
    - Returns
       - EntityReturnImpl(entity=model.Student, querySpaceUid=<gen:0>, path=model.Student)
          - EntityAttributeFetchImpl(entity=model.Address, querySpaceUid=<gen:1>, path=model.Student.address)
          - EntityAttributeFetchImpl(entity=model.Course, querySpaceUid=<gen:2>, path=model.Student.course)
          - EntityAttributeFetchImpl(entity=model.FlightInstructor, querySpaceUid=<gen:3>, path=model.Student.instructor)
          - CollectionAttributeFetchImpl(collection=model.Student.flights, querySpaceUid=<gen:4>, path=model.Student.flights)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Flight, querySpaceUid=<gen:5>, path=model.Student.flights.<elements>)
          - CollectionAttributeFetchImpl(collection=model.Student.theoryClasses, querySpaceUid=<gen:6>, path=model.Student.theoryClasses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.TheoryClass, querySpaceUid=<gen:7>, path=model.Student.theoryClasses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_4_0_}

[DEBUG] Static select for entity model.Student [READ]: select student0_.STUDENT_ID as person_i1_4_0_, student0_1_.FIRST_NAME as first_na2_4_0_, student0_1_.SECOND_NAME as second_n3_4_0_, student0_1_.SSN as ssn4_4_0_, student0_1_.ADDRESS_ID as address_5_4_0_, student0_.MEDICAL_TESTS as medical_2_5_0_, student0_.COURSE_ID as course_i3_5_0_, student0_.INSTRUCTOR_ID as instruct4_5_0_ from STUDENTS student0_ inner join PERSONS student0_1_ on student0_.STUDENT_ID=student0_1_.PERSON_ID where student0_.STUDENT_ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Student: select student0_.STUDENT_ID as person_i1_4_0_, student0_1_.FIRST_NAME as first_na2_4_0_, student0_1_.SECOND_NAME as second_n3_4_0_, student0_1_.SSN as ssn4_4_0_, student0_1_.ADDRESS_ID as address_5_4_0_, student0_.MEDICAL_TESTS as medical_2_5_0_, student0_.COURSE_ID as course_i3_5_0_, student0_.INSTRUCTOR_ID as instruct4_5_0_ from STUDENTS student0_ inner join PERSONS student0_1_ on student0_.STUDENT_ID=student0_1_.PERSON_ID where student0_.STUDENT_ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Student: select student0_.STUDENT_ID as person_i1_4_0_, student0_1_.FIRST_NAME as first_na2_4_0_, student0_1_.SECOND_NAME as second_n3_4_0_, student0_1_.SSN as ssn4_4_0_, student0_1_.ADDRESS_ID as address_5_4_0_, student0_.MEDICAL_TESTS as medical_2_5_0_, student0_.COURSE_ID as course_i3_5_0_, student0_.INSTRUCTOR_ID as instruct4_5_0_ from STUDENTS student0_ inner join PERSONS student0_1_ on student0_.STUDENT_ID=student0_1_.PERSON_ID where student0_.STUDENT_ID=?
[DEBUG] Static SQL for entity: model.TheoryClass
[DEBUG]  Version select: select CLASS_ID from THEORY_CLASSES where CLASS_ID =?
[DEBUG]  Snapshot select: select theoryclas_.CLASS_ID, theoryclas_.NAME as name2_7_, theoryclas_.HOURS as hours3_7_, theoryclas_.GRADE as grade4_7_ from THEORY_CLASSES theoryclas_ where theoryclas_.CLASS_ID=?
[DEBUG]  Insert 0: insert into THEORY_CLASSES (NAME, HOURS, GRADE, CLASS_ID) values (?, ?, ?, ?)
[DEBUG]  Update 0: update THEORY_CLASSES set NAME=?, HOURS=?, GRADE=? where CLASS_ID=?
[DEBUG]  Delete 0: delete from THEORY_CLASSES where CLASS_ID=?
[DEBUG]  Identity insert: insert into THEORY_CLASSES (NAME, HOURS, GRADE) values (?, ?, ?)
[TRACE]  Starting root entity : model.TheoryClass
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c57f6b2]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4b515eab
[TRACE] .. Registering AssociationKey : AssociationKey(table=THEORY_CLASSES, columns={CLASS_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4b515eab
[TRACE] >> Starting entity identifier : model.TheoryClass
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : hours
[TRACE] >> Starting attribute Attribute(name=hours, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=hours, type=integer [non-identifier])
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=integer [non-identifier])
[DEBUG] Visiting attribute path : students
[TRACE] >> Starting attribute Attribute(name=students, type=java.util.Set(model.TheoryClass.students) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66c9b52f]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1536ea40]
[TRACE] << Finishing up attribute : Attribute(name=students, type=java.util.Set(model.TheoryClass.students) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4b515eab
[TRACE]  Finished root entity : model.TheoryClass
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.TheoryClass)
    - Returns
       - EntityReturnImpl(entity=model.TheoryClass, querySpaceUid=<gen:0>, path=model.TheoryClass)
          - CollectionAttributeFetchImpl(collection=model.TheoryClass.students, querySpaceUid=<gen:1>, path=model.TheoryClass.students)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Student, querySpaceUid=<gen:2>, path=model.TheoryClass.students.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.TheoryClass)
          - SQL table alias mapping - theoryclas0_
          - alias suffix - 0_
          - suffixed key columns - {class_id1_7_0_}

[DEBUG] Static select for entity model.TheoryClass [NONE]: select theoryclas0_.CLASS_ID as class_id1_7_0_, theoryclas0_.NAME as name2_7_0_, theoryclas0_.HOURS as hours3_7_0_, theoryclas0_.GRADE as grade4_7_0_ from THEORY_CLASSES theoryclas0_ where theoryclas0_.CLASS_ID=?
[TRACE]  Starting root entity : model.TheoryClass
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36776c32]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7792d851
[TRACE] .. Registering AssociationKey : AssociationKey(table=THEORY_CLASSES, columns={CLASS_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7792d851
[TRACE] >> Starting entity identifier : model.TheoryClass
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : hours
[TRACE] >> Starting attribute Attribute(name=hours, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=hours, type=integer [non-identifier])
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=integer [non-identifier])
[DEBUG] Visiting attribute path : students
[TRACE] >> Starting attribute Attribute(name=students, type=java.util.Set(model.TheoryClass.students) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5cd96b41]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e1ffe70]
[TRACE] << Finishing up attribute : Attribute(name=students, type=java.util.Set(model.TheoryClass.students) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7792d851
[TRACE]  Finished root entity : model.TheoryClass
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.TheoryClass)
    - Returns
       - EntityReturnImpl(entity=model.TheoryClass, querySpaceUid=<gen:0>, path=model.TheoryClass)
          - CollectionAttributeFetchImpl(collection=model.TheoryClass.students, querySpaceUid=<gen:1>, path=model.TheoryClass.students)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Student, querySpaceUid=<gen:2>, path=model.TheoryClass.students.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.TheoryClass)
          - SQL table alias mapping - theoryclas0_
          - alias suffix - 0_
          - suffixed key columns - {class_id1_7_0_}

[DEBUG] Static select for entity model.TheoryClass [READ]: select theoryclas0_.CLASS_ID as class_id1_7_0_, theoryclas0_.NAME as name2_7_0_, theoryclas0_.HOURS as hours3_7_0_, theoryclas0_.GRADE as grade4_7_0_ from THEORY_CLASSES theoryclas0_ where theoryclas0_.CLASS_ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.TheoryClass: select theoryclas0_.CLASS_ID as class_id1_7_0_, theoryclas0_.NAME as name2_7_0_, theoryclas0_.HOURS as hours3_7_0_, theoryclas0_.GRADE as grade4_7_0_ from THEORY_CLASSES theoryclas0_ where theoryclas0_.CLASS_ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.TheoryClass: select theoryclas0_.CLASS_ID as class_id1_7_0_, theoryclas0_.NAME as name2_7_0_, theoryclas0_.HOURS as hours3_7_0_, theoryclas0_.GRADE as grade4_7_0_ from THEORY_CLASSES theoryclas0_ where theoryclas0_.CLASS_ID=?
[TRACE]  Starting root collection : model.TheoryClass.students
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19c1820d]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40709f9]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@6e829e50
[TRACE]  Registering AssociationKey : AssociationKey(table=STUDENTS_CLASSES, columns={CLASS_ID}) -> null
[TRACE]  Starting collection element graph : model.TheoryClass.students
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@373e6b9d
[TRACE] .. Registering AssociationKey : AssociationKey(table=STUDENTS_CLASSES, columns={STUDENT_ID}) -> org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@373e6b9d
[TRACE] >> Starting entity identifier : model.Student
[DEBUG] Visiting attribute path : firstName
[TRACE] >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
[DEBUG] Visiting attribute path : secondName
[TRACE] >> Starting attribute Attribute(name=secondName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=secondName, type=string [non-identifier])
[DEBUG] Visiting attribute path : SSN
[TRACE] >> Starting attribute Attribute(name=SSN, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=SSN, type=double [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65629ac6]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model.Address [non-identifier,association])
[DEBUG] Visiting attribute path : medicalTests
[TRACE] >> Starting attribute Attribute(name=medicalTests, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=medicalTests, type=string [non-identifier])
[DEBUG] Visiting attribute path : course
[TRACE] >> Starting attribute Attribute(name=course, type=model.Course [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56b8aaf1]
[TRACE] << Finishing up attribute : Attribute(name=course, type=model.Course [non-identifier,association])
[DEBUG] Visiting attribute path : instructor
[TRACE] >> Starting attribute Attribute(name=instructor, type=model.FlightInstructor [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5482bcac]
[TRACE] << Finishing up attribute : Attribute(name=instructor, type=model.FlightInstructor [non-identifier,association])
[DEBUG] Visiting attribute path : flights
[TRACE] >> Starting attribute Attribute(name=flights, type=java.util.Set(model.Student.flights) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10244722]
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61615b4a]
[TRACE] << Finishing up attribute : Attribute(name=flights, type=java.util.Set(model.Student.flights) [non-identifier,association])
[DEBUG] Visiting attribute path : theoryClasses
[DEBUG] Property path deemed to be circular : theoryClasses
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@373e6b9d
[TRACE]  Finished collection element graph : model.TheoryClass.students
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@6e829e50
[TRACE]  Finished root collection : model.TheoryClass.students
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model.TheoryClass.students)
    - Returns
       - CollectionReturnImpl(collection=model.TheoryClass.students, querySpaceUid=<gen:0>, path=[model.TheoryClass.students])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model.Student, querySpaceUid=<gen:1>, path=[model.TheoryClass.students].<elements>)
             - EntityAttributeFetchImpl(entity=model.Address, querySpaceUid=<gen:2>, path=[model.TheoryClass.students].<elements>.address)
             - EntityAttributeFetchImpl(entity=model.Course, querySpaceUid=<gen:3>, path=[model.TheoryClass.students].<elements>.course)
             - EntityAttributeFetchImpl(entity=model.FlightInstructor, querySpaceUid=<gen:4>, path=[model.TheoryClass.students].<elements>.instructor)
             - CollectionAttributeFetchImpl(collection=model.Student.flights, querySpaceUid=<gen:5>, path=[model.TheoryClass.students].<elements>.flights)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Flight, querySpaceUid=<gen:6>, path=[model.TheoryClass.students].<elements>.flights.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model.TheoryClass.students)
          - SQL table alias mapping - students0_
          - alias suffix - 0_
          - suffixed key columns - {class_id2_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - person_i1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Student)
                - SQL table alias mapping - student1_
                - alias suffix - 1_
                - suffixed key columns - {person_i1_4_1_}

[DEBUG] Static select for collection model.TheoryClass.students: select students0_.CLASS_ID as class_id2_6_0_, students0_.STUDENT_ID as student_1_6_0_, student1_.STUDENT_ID as person_i1_4_1_, student1_1_.FIRST_NAME as first_na2_4_1_, student1_1_.SECOND_NAME as second_n3_4_1_, student1_1_.SSN as ssn4_4_1_, student1_1_.ADDRESS_ID as address_5_4_1_, student1_.MEDICAL_TESTS as medical_2_5_1_, student1_.COURSE_ID as course_i3_5_1_, student1_.INSTRUCTOR_ID as instruct4_5_1_ from STUDENTS_CLASSES students0_ inner join STUDENTS student1_ on students0_.STUDENT_ID=student1_.STUDENT_ID left outer join PERSONS student1_1_ on student1_.STUDENT_ID=student1_1_.PERSON_ID where students0_.CLASS_ID=?
[TRACE]  Starting root collection : model.FlightInstructor.flights
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ae1c281]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ac8768e]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@1e957e2f
[TRACE]  Registering AssociationKey : AssociationKey(table=FLIGHTS, columns={INSTRUCTOR_ID}) -> null
[TRACE]  Starting collection element graph : model.FlightInstructor.flights
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@691500ab
[TRACE] >> Starting entity identifier : model.Flight
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : student
[TRACE] >> Starting attribute Attribute(name=student, type=model.Student [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3db432c2]
[TRACE] << Finishing up attribute : Attribute(name=student, type=model.Student [non-identifier,association])
[DEBUG] Visiting attribute path : instructor
[DEBUG] Property path deemed to be circular : instructor
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@691500ab
[TRACE]  Finished collection element graph : model.FlightInstructor.flights
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@1e957e2f
[TRACE]  Finished root collection : model.FlightInstructor.flights
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model.FlightInstructor.flights)
    - Returns
       - CollectionReturnImpl(collection=model.FlightInstructor.flights, querySpaceUid=<gen:0>, path=[model.FlightInstructor.flights])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model.Flight, querySpaceUid=<gen:1>, path=[model.FlightInstructor.flights].<elements>)
             - EntityAttributeFetchImpl(entity=model.Student, querySpaceUid=<gen:2>, path=[model.FlightInstructor.flights].<elements>.student)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model.FlightInstructor.flights)
          - SQL table alias mapping - flights0_
          - alias suffix - 0_
          - suffixed key columns - {instruct5_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - flight_i1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Flight)
                - SQL table alias mapping - flights0_
                - alias suffix - 1_
                - suffixed key columns - {flight_i1_3_1_}

[DEBUG] Static select for collection model.FlightInstructor.flights: select flights0_.INSTRUCTOR_ID as instruct5_3_0_, flights0_.FLIGHT_ID as flight_i1_3_0_, flights0_.FLIGHT_ID as flight_i1_3_1_, flights0_.DESCRIPTION as descript2_3_1_, flights0_.DATE as date3_3_1_, flights0_.STUDENT_ID as student_4_3_1_, flights0_.INSTRUCTOR_ID as instruct5_3_1_ from FLIGHTS flights0_ where flights0_.INSTRUCTOR_ID=?
[TRACE]  Starting root collection : model.Student.theoryClasses
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5cff6b74]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@627ff1b8]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@62b57479
[TRACE]  Registering AssociationKey : AssociationKey(table=STUDENTS_CLASSES, columns={STUDENT_ID}) -> null
[TRACE]  Starting collection element graph : model.Student.theoryClasses
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@29a33620
[TRACE] .. Registering AssociationKey : AssociationKey(table=STUDENTS_CLASSES, columns={CLASS_ID}) -> org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@29a33620
[TRACE] >> Starting entity identifier : model.TheoryClass
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : hours
[TRACE] >> Starting attribute Attribute(name=hours, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=hours, type=integer [non-identifier])
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=integer [non-identifier])
[DEBUG] Visiting attribute path : students
[DEBUG] Property path deemed to be circular : students
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@29a33620
[TRACE]  Finished collection element graph : model.Student.theoryClasses
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@62b57479
[TRACE]  Finished root collection : model.Student.theoryClasses
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model.Student.theoryClasses)
    - Returns
       - CollectionReturnImpl(collection=model.Student.theoryClasses, querySpaceUid=<gen:0>, path=[model.Student.theoryClasses])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model.TheoryClass, querySpaceUid=<gen:1>, path=[model.Student.theoryClasses].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model.Student.theoryClasses)
          - SQL table alias mapping - theoryclas0_
          - alias suffix - 0_
          - suffixed key columns - {student_1_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - class_id1_7_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.TheoryClass)
                - SQL table alias mapping - theoryclas1_
                - alias suffix - 1_
                - suffixed key columns - {class_id1_7_1_}

[DEBUG] Static select for collection model.Student.theoryClasses: select theoryclas0_.STUDENT_ID as student_1_6_0_, theoryclas0_.CLASS_ID as class_id2_6_0_, theoryclas1_.CLASS_ID as class_id1_7_1_, theoryclas1_.NAME as name2_7_1_, theoryclas1_.HOURS as hours3_7_1_, theoryclas1_.GRADE as grade4_7_1_ from STUDENTS_CLASSES theoryclas0_ inner join THEORY_CLASSES theoryclas1_ on theoryclas0_.CLASS_ID=theoryclas1_.CLASS_ID where theoryclas0_.STUDENT_ID=?
[TRACE]  Starting root collection : model.Course.students
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ea04cab]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@134f8ef6]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@5a90265a
[TRACE]  Registering AssociationKey : AssociationKey(table=STUDENTS, columns={COURSE_ID}) -> null
[TRACE]  Starting collection element graph : model.Course.students
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@6a32191e
[TRACE] >> Starting entity identifier : model.Student
[DEBUG] Visiting attribute path : firstName
[TRACE] >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
[DEBUG] Visiting attribute path : secondName
[TRACE] >> Starting attribute Attribute(name=secondName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=secondName, type=string [non-identifier])
[DEBUG] Visiting attribute path : SSN
[TRACE] >> Starting attribute Attribute(name=SSN, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=SSN, type=double [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66fbc5e7]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model.Address [non-identifier,association])
[DEBUG] Visiting attribute path : medicalTests
[TRACE] >> Starting attribute Attribute(name=medicalTests, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=medicalTests, type=string [non-identifier])
[DEBUG] Visiting attribute path : course
[DEBUG] Property path deemed to be circular : course
[DEBUG] Visiting attribute path : instructor
[TRACE] >> Starting attribute Attribute(name=instructor, type=model.FlightInstructor [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9accff0]
[TRACE] << Finishing up attribute : Attribute(name=instructor, type=model.FlightInstructor [non-identifier,association])
[DEBUG] Visiting attribute path : flights
[TRACE] >> Starting attribute Attribute(name=flights, type=java.util.Set(model.Student.flights) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52559a69]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@285583d4]
[TRACE] << Finishing up attribute : Attribute(name=flights, type=java.util.Set(model.Student.flights) [non-identifier,association])
[DEBUG] Visiting attribute path : theoryClasses
[TRACE] >> Starting attribute Attribute(name=theoryClasses, type=java.util.Set(model.Student.theoryClasses) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1039bfc4]
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f85217c]
[TRACE] << Finishing up attribute : Attribute(name=theoryClasses, type=java.util.Set(model.Student.theoryClasses) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@6a32191e
[TRACE]  Finished collection element graph : model.Course.students
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@5a90265a
[TRACE]  Finished root collection : model.Course.students
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model.Course.students)
    - Returns
       - CollectionReturnImpl(collection=model.Course.students, querySpaceUid=<gen:0>, path=[model.Course.students])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model.Student, querySpaceUid=<gen:1>, path=[model.Course.students].<elements>)
             - EntityAttributeFetchImpl(entity=model.Address, querySpaceUid=<gen:2>, path=[model.Course.students].<elements>.address)
             - EntityAttributeFetchImpl(entity=model.FlightInstructor, querySpaceUid=<gen:3>, path=[model.Course.students].<elements>.instructor)
             - CollectionAttributeFetchImpl(collection=model.Student.flights, querySpaceUid=<gen:4>, path=[model.Course.students].<elements>.flights)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Flight, querySpaceUid=<gen:5>, path=[model.Course.students].<elements>.flights.<elements>)
             - CollectionAttributeFetchImpl(collection=model.Student.theoryClasses, querySpaceUid=<gen:6>, path=[model.Course.students].<elements>.theoryClasses)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.TheoryClass, querySpaceUid=<gen:7>, path=[model.Course.students].<elements>.theoryClasses.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model.Course.students)
          - SQL table alias mapping - students0_
          - alias suffix - 0_
          - suffixed key columns - {course_i3_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - person_i1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Student)
                - SQL table alias mapping - students0_
                - alias suffix - 1_
                - suffixed key columns - {person_i1_4_1_}

[DEBUG] Static select for collection model.Course.students: select students0_.COURSE_ID as course_i3_5_0_, students0_.STUDENT_ID as student_1_5_0_, students0_.STUDENT_ID as person_i1_4_1_, students0_1_.FIRST_NAME as first_na2_4_1_, students0_1_.SECOND_NAME as second_n3_4_1_, students0_1_.SSN as ssn4_4_1_, students0_1_.ADDRESS_ID as address_5_4_1_, students0_.MEDICAL_TESTS as medical_2_5_1_, students0_.COURSE_ID as course_i3_5_1_, students0_.INSTRUCTOR_ID as instruct4_5_1_ from STUDENTS students0_ inner join PERSONS students0_1_ on students0_.STUDENT_ID=students0_1_.PERSON_ID where students0_.COURSE_ID=?
[TRACE]  Starting root collection : model.Student.flights
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1fd7a37]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b202ff]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@58a84a12
[TRACE]  Registering AssociationKey : AssociationKey(table=FLIGHTS, columns={STUDENT_ID}) -> null
[TRACE]  Starting collection element graph : model.Student.flights
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@e700eba
[TRACE] >> Starting entity identifier : model.Flight
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : student
[DEBUG] Property path deemed to be circular : student
[DEBUG] Visiting attribute path : instructor
[TRACE] >> Starting attribute Attribute(name=instructor, type=model.FlightInstructor [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6436e181]
[TRACE] << Finishing up attribute : Attribute(name=instructor, type=model.FlightInstructor [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@e700eba
[TRACE]  Finished collection element graph : model.Student.flights
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@58a84a12
[TRACE]  Finished root collection : model.Student.flights
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model.Student.flights)
    - Returns
       - CollectionReturnImpl(collection=model.Student.flights, querySpaceUid=<gen:0>, path=[model.Student.flights])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model.Flight, querySpaceUid=<gen:1>, path=[model.Student.flights].<elements>)
             - EntityAttributeFetchImpl(entity=model.FlightInstructor, querySpaceUid=<gen:2>, path=[model.Student.flights].<elements>.instructor)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model.Student.flights)
          - SQL table alias mapping - flights0_
          - alias suffix - 0_
          - suffixed key columns - {student_4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - flight_i1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Flight)
                - SQL table alias mapping - flights0_
                - alias suffix - 1_
                - suffixed key columns - {flight_i1_3_1_}

[DEBUG] Static select for collection model.Student.flights: select flights0_.STUDENT_ID as student_4_3_0_, flights0_.FLIGHT_ID as flight_i1_3_0_, flights0_.FLIGHT_ID as flight_i1_3_1_, flights0_.DESCRIPTION as descript2_3_1_, flights0_.DATE as date3_3_1_, flights0_.STUDENT_ID as student_4_3_1_, flights0_.INSTRUCTOR_ID as instruct5_3_1_ from FLIGHTS flights0_ where flights0_.STUDENT_ID=?
[TRACE]  Starting root collection : model.FlightInstructor.students
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7186b202]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b649efa]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@65ef48f2
[TRACE]  Registering AssociationKey : AssociationKey(table=STUDENTS, columns={INSTRUCTOR_ID}) -> null
[TRACE]  Starting collection element graph : model.FlightInstructor.students
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@36068727
[TRACE] >> Starting entity identifier : model.Student
[DEBUG] Visiting attribute path : firstName
[TRACE] >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
[DEBUG] Visiting attribute path : secondName
[TRACE] >> Starting attribute Attribute(name=secondName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=secondName, type=string [non-identifier])
[DEBUG] Visiting attribute path : SSN
[TRACE] >> Starting attribute Attribute(name=SSN, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=SSN, type=double [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72543547]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model.Address [non-identifier,association])
[DEBUG] Visiting attribute path : medicalTests
[TRACE] >> Starting attribute Attribute(name=medicalTests, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=medicalTests, type=string [non-identifier])
[DEBUG] Visiting attribute path : course
[TRACE] >> Starting attribute Attribute(name=course, type=model.Course [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d88e6b9]
[TRACE] << Finishing up attribute : Attribute(name=course, type=model.Course [non-identifier,association])
[DEBUG] Visiting attribute path : instructor
[DEBUG] Property path deemed to be circular : instructor
[DEBUG] Visiting attribute path : flights
[TRACE] >> Starting attribute Attribute(name=flights, type=java.util.Set(model.Student.flights) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22bf9122]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@208205ed]
[TRACE] << Finishing up attribute : Attribute(name=flights, type=java.util.Set(model.Student.flights) [non-identifier,association])
[DEBUG] Visiting attribute path : theoryClasses
[TRACE] >> Starting attribute Attribute(name=theoryClasses, type=java.util.Set(model.Student.theoryClasses) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73afe2b7]
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9687f55]
[TRACE] << Finishing up attribute : Attribute(name=theoryClasses, type=java.util.Set(model.Student.theoryClasses) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@36068727
[TRACE]  Finished collection element graph : model.FlightInstructor.students
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@65ef48f2
[TRACE]  Finished root collection : model.FlightInstructor.students
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model.FlightInstructor.students)
    - Returns
       - CollectionReturnImpl(collection=model.FlightInstructor.students, querySpaceUid=<gen:0>, path=[model.FlightInstructor.students])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model.Student, querySpaceUid=<gen:1>, path=[model.FlightInstructor.students].<elements>)
             - EntityAttributeFetchImpl(entity=model.Address, querySpaceUid=<gen:2>, path=[model.FlightInstructor.students].<elements>.address)
             - EntityAttributeFetchImpl(entity=model.Course, querySpaceUid=<gen:3>, path=[model.FlightInstructor.students].<elements>.course)
             - CollectionAttributeFetchImpl(collection=model.Student.flights, querySpaceUid=<gen:4>, path=[model.FlightInstructor.students].<elements>.flights)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Flight, querySpaceUid=<gen:5>, path=[model.FlightInstructor.students].<elements>.flights.<elements>)
             - CollectionAttributeFetchImpl(collection=model.Student.theoryClasses, querySpaceUid=<gen:6>, path=[model.FlightInstructor.students].<elements>.theoryClasses)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.TheoryClass, querySpaceUid=<gen:7>, path=[model.FlightInstructor.students].<elements>.theoryClasses.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model.FlightInstructor.students)
          - SQL table alias mapping - students0_
          - alias suffix - 0_
          - suffixed key columns - {instruct4_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - person_i1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Student)
                - SQL table alias mapping - students0_
                - alias suffix - 1_
                - suffixed key columns - {person_i1_4_1_}

[DEBUG] Static select for collection model.FlightInstructor.students: select students0_.INSTRUCTOR_ID as instruct4_5_0_, students0_.STUDENT_ID as student_1_5_0_, students0_.STUDENT_ID as person_i1_4_1_, students0_1_.FIRST_NAME as first_na2_4_1_, students0_1_.SECOND_NAME as second_n3_4_1_, students0_1_.SSN as ssn4_4_1_, students0_1_.ADDRESS_ID as address_5_4_1_, students0_.MEDICAL_TESTS as medical_2_5_1_, students0_.COURSE_ID as course_i3_5_1_, students0_.INSTRUCTOR_ID as instruct4_5_1_ from STUDENTS students0_ inner join PERSONS students0_1_ on students0_.STUDENT_ID=students0_1_.PERSON_ID where students0_.INSTRUCTOR_ID=?
[TRACE] Wrapping up metadata context...
[TRACE] Starting entity [model.Course]
[TRACE] Building identifier attribute [Course.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public int model.Course.getId()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [Course.certType]
[TRACE] Starting attribute metadata determination [certType]
[TRACE]     Determined member [public model.CertificationType model.Course.getCertType()]
[TRACE]     Determined type [name=org.hibernate.type.EnumType, class=org.hibernate.type.CustomType]
[TRACE] Building attribute [Course.description]
[TRACE] Starting attribute metadata determination [description]
[TRACE]     Determined member [public java.lang.String model.Course.getDescription()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Course.startDate]
[TRACE] Starting attribute metadata determination [startDate]
[TRACE]     Determined member [public java.time.LocalDate model.Course.getStartDate()]
[TRACE]     Determined type [name=LocalDate, class=org.hibernate.type.LocalDateType]
[TRACE] Building attribute [Course.endDate]
[TRACE] Starting attribute metadata determination [endDate]
[TRACE]     Determined member [public java.time.LocalDate model.Course.getEndDate()]
[TRACE]     Determined type [name=LocalDate, class=org.hibernate.type.LocalDateType]
[TRACE] Building attribute [Course.students]
[TRACE] Starting attribute metadata determination [students]
[TRACE]     Determined member [public java.util.Set model.Course.getStudents()]
[TRACE]     Determined type [name=java.util.Set(model.Course.students), class=org.hibernate.type.SetType]
[TRACE] Completed entity [model.Course]
[TRACE] Starting entity [model.Flight]
[TRACE] Building identifier attribute [Flight.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public int model.Flight.getId()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [Flight.description]
[TRACE] Starting attribute metadata determination [description]
[TRACE]     Determined member [public java.lang.String model.Flight.getDescription()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Flight.date]
[TRACE] Starting attribute metadata determination [date]
[TRACE]     Determined member [public java.time.LocalDate model.Flight.getDate()]
[TRACE]     Determined type [name=LocalDate, class=org.hibernate.type.LocalDateType]
[TRACE] Building attribute [Flight.student]
[TRACE] Starting attribute metadata determination [student]
[TRACE]     Determined member [public model.Student model.Flight.getStudent()]
[TRACE]     Determined type [name=model.Student, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [Flight.instructor]
[TRACE] Starting attribute metadata determination [instructor]
[TRACE]     Determined member [public model.FlightInstructor model.Flight.getInstructor()]
[TRACE]     Determined type [name=model.FlightInstructor, class=org.hibernate.type.ManyToOneType]
[TRACE] Completed entity [model.Flight]
[TRACE] Starting entity [model.Person]
[TRACE] Building identifier attribute [Person.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public int model.Person.getId()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [Person.firstName]
[TRACE] Starting attribute metadata determination [firstName]
[TRACE]     Determined member [public java.lang.String model.Person.getFirstName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Person.secondName]
[TRACE] Starting attribute metadata determination [secondName]
[TRACE]     Determined member [public java.lang.String model.Person.getSecondName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Person.SSN]
[TRACE] Starting attribute metadata determination [SSN]
[TRACE]     Determined member [public java.lang.Double model.Person.getSSN()]
[TRACE]     Determined type [name=double, class=org.hibernate.type.DoubleType]
[TRACE] Building attribute [Person.address]
[TRACE] Starting attribute metadata determination [address]
[TRACE]     Determined member [public model.Address model.Person.getAddress()]
[TRACE]     Determined type [name=model.Address, class=org.hibernate.type.ManyToOneType]
[TRACE] Completed entity [model.Person]
[TRACE] Starting entity [model.Address]
[TRACE] Building identifier attribute [Address.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public java.lang.Integer model.Address.getId()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [Address.country]
[TRACE] Starting attribute metadata determination [country]
[TRACE]     Determined member [public java.lang.String model.Address.getCountry()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Address.city]
[TRACE] Starting attribute metadata determination [city]
[TRACE]     Determined member [public java.lang.String model.Address.getCity()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Address.postalCode]
[TRACE] Starting attribute metadata determination [postalCode]
[TRACE]     Determined member [public java.lang.String model.Address.getPostalCode()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Address.street]
[TRACE] Starting attribute metadata determination [street]
[TRACE]     Determined member [public java.lang.String model.Address.getStreet()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model.Address]
[TRACE] Starting entity [model.FlightInstructor]
[TRACE] Building attribute [FlightInstructor.licenceNo]
[TRACE] Starting attribute metadata determination [licenceNo]
[TRACE]     Determined member [public java.lang.Long model.FlightInstructor.getLicenceNo()]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [FlightInstructor.valid]
[TRACE] Starting attribute metadata determination [valid]
[TRACE]     Determined member [public java.lang.Boolean model.FlightInstructor.getValid()]
[TRACE]     Determined type [name=converted::goodies.BooleanConverter, class=org.hibernate.type.descriptor.converter.AttributeConverterTypeAdapter]
[TRACE] Building attribute [FlightInstructor.flights]
[TRACE] Starting attribute metadata determination [flights]
[TRACE]     Determined member [public java.util.Set model.FlightInstructor.getFlights()]
[TRACE]     Determined type [name=java.util.Set(model.FlightInstructor.flights), class=org.hibernate.type.SetType]
[TRACE] Building attribute [FlightInstructor.students]
[TRACE] Starting attribute metadata determination [students]
[TRACE]     Determined member [public java.util.Set model.FlightInstructor.getStudents()]
[TRACE]     Determined type [name=java.util.Set(model.FlightInstructor.students), class=org.hibernate.type.SetType]
[TRACE] Completed entity [model.FlightInstructor]
[TRACE] Starting entity [model.Student]
[TRACE] Building attribute [Student.medicalTests]
[TRACE] Starting attribute metadata determination [medicalTests]
[TRACE]     Determined member [public java.lang.String model.Student.getMedicalTests()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Student.course]
[TRACE] Starting attribute metadata determination [course]
[TRACE]     Determined member [public model.Course model.Student.getCourse()]
[TRACE]     Determined type [name=model.Course, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [Student.instructor]
[TRACE] Starting attribute metadata determination [instructor]
[TRACE]     Determined member [public model.FlightInstructor model.Student.getInstructor()]
[TRACE]     Determined type [name=model.FlightInstructor, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [Student.flights]
[TRACE] Starting attribute metadata determination [flights]
[TRACE]     Determined member [public java.util.Set model.Student.getFlights()]
[TRACE]     Determined type [name=java.util.Set(model.Student.flights), class=org.hibernate.type.SetType]
[TRACE] Building attribute [Student.theoryClasses]
[TRACE] Starting attribute metadata determination [theoryClasses]
[TRACE]     Determined member [public java.util.Set model.Student.getTheoryClasses()]
[TRACE]     Determined type [name=java.util.Set(model.Student.theoryClasses), class=org.hibernate.type.SetType]
[TRACE] Completed entity [model.Student]
[TRACE] Starting entity [model.TheoryClass]
[TRACE] Building identifier attribute [TheoryClass.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public java.lang.Integer model.TheoryClass.getId()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [TheoryClass.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [public java.lang.String model.TheoryClass.getName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [TheoryClass.hours]
[TRACE] Starting attribute metadata determination [hours]
[TRACE]     Determined member [public java.lang.Integer model.TheoryClass.getHours()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [TheoryClass.grade]
[TRACE] Starting attribute metadata determination [grade]
[TRACE]     Determined member [public java.lang.Integer model.TheoryClass.getGrade()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [TheoryClass.students]
[TRACE] Starting attribute metadata determination [students]
[TRACE]     Determined member [public java.util.Set model.TheoryClass.getStudents()]
[TRACE]     Determined type [name=java.util.Set(model.TheoryClass.students), class=org.hibernate.type.SetType]
[TRACE] Completed entity [model.TheoryClass]
[TRACE] Normalizing identifier quoting [HT_PERSONS]
[TRACE] Normalizing identifier quoting [HT_FLIGHT_INSTRUCTORS]
[TRACE] Normalizing identifier quoting [HT_STUDENTS]
[TRACE] Initializing service [role=org.hibernate.tool.schema.spi.SchemaManagementTool]
[TRACE] Normalizing identifier quoting for object name [project]
[TRACE] Rendering unquoted identifier [project] in lower case for use in DatabaseMetaData
[INFO ] HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@40ed1802] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[TRACE] Normalizing identifier quoting for object name [ADDRESSES]
[TRACE] Rendering unquoted identifier [ADDRESSES] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [COURSES]
[TRACE] Rendering unquoted identifier [COURSES] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [FLIGHT_INSTRUCTORS]
[TRACE] Rendering unquoted identifier [FLIGHT_INSTRUCTORS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [FLIGHTS]
[TRACE] Rendering unquoted identifier [FLIGHTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [PERSONS]
[TRACE] Rendering unquoted identifier [PERSONS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [STUDENTS]
[TRACE] Rendering unquoted identifier [STUDENTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [STUDENTS_CLASSES]
[TRACE] Rendering unquoted identifier [STUDENTS_CLASSES] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [THEORY_CLASSES]
[TRACE] Rendering unquoted identifier [THEORY_CLASSES] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [ADDRESSES]
[TRACE] Rendering unquoted identifier [ADDRESSES] in lower case for use in DatabaseMetaData
[TRACE] Interpreting UniqueConstraintSchemaUpdateStrategy from setting : null
[TRACE] Normalizing identifier quoting for object name [COURSES]
[TRACE] Rendering unquoted identifier [COURSES] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [FLIGHT_INSTRUCTORS]
[TRACE] Rendering unquoted identifier [FLIGHT_INSTRUCTORS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [FLIGHTS]
[TRACE] Rendering unquoted identifier [FLIGHTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [PERSONS]
[TRACE] Rendering unquoted identifier [PERSONS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [STUDENTS]
[TRACE] Rendering unquoted identifier [STUDENTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [STUDENTS_CLASSES]
[TRACE] Rendering unquoted identifier [STUDENTS_CLASSES] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [THEORY_CLASSES]
[TRACE] Rendering unquoted identifier [THEORY_CLASSES] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [ADDRESSES]
[TRACE] Rendering unquoted identifier [ADDRESSES] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [COURSES]
[TRACE] Rendering unquoted identifier [COURSES] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [FLIGHT_INSTRUCTORS]
[TRACE] Rendering unquoted identifier [FLIGHT_INSTRUCTORS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [FLIGHTS]
[TRACE] Rendering unquoted identifier [FLIGHTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [PERSONS]
[TRACE] Rendering unquoted identifier [PERSONS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [STUDENTS]
[TRACE] Rendering unquoted identifier [STUDENTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [STUDENTS_CLASSES]
[TRACE] Rendering unquoted identifier [STUDENTS_CLASSES] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [THEORY_CLASSES]
[TRACE] Rendering unquoted identifier [THEORY_CLASSES] in lower case for use in DatabaseMetaData
[TRACE] Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
[DEBUG] No JtaPlatform was specified, checking resolver
[TRACE] Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
[DEBUG] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] Checking 0 named HQL queries
[DEBUG] Checking 0 named SQL queries
[DEBUG] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@a85644c
[TRACE] Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
[DEBUG] Registering SessionFactory: b1d83b02-7403-4014-8fb2-c7bf1ea6e564 (<unnamed>)
[DEBUG] Not binding SessionFactory to JNDI, no JNDI name configured
[TRACE] Opening Hibernate Session.  tenant=null
[TRACE] Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
[DEBUG] Statistics initialized [enabled=false]
[TRACE] Initializing service [role=org.hibernate.jmx.spi.JmxService]
[TRACE] Opened Session [7fe10efb-0531-40c1-90c4-fedd9d35bf52] at timestamp: 1605609218445
[DEBUG] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] begin
[TRACE] Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
[TRACE] Transaction begun via JDBC Connection.setAutoCommit(false)
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
[TRACE] Saving transient instance
[TRACE] Saving [model.Student#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Cascading to save or update: model.Address
[TRACE] Transient instance of: model.Address
[TRACE] Saving transient instance
[TRACE] Saving [model.Address#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model.Address] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Address#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Address#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Address (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@73608eb0 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@f27d8d9: insert into ADDRESSES (COUNTRY, CITY, POSTAL_CODE, STREET) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Address#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@2eda2062 [wrapping: com.mysql.jdbc.JDBC4ResultSet@c4d2c44]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@2eda2062 [wrapping: com.mysql.jdbc.JDBC4ResultSet@c4d2c44]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@73608eb0 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@f27d8d9: insert into ADDRESSES (COUNTRY, CITY, POSTAL_CODE, STREET) values ('Poland', 'Gliwice', '44-100', 'Kujawska 2')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@73608eb0 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@f27d8d9: insert into ADDRESSES (COUNTRY, CITY, POSTAL_CODE, STREET) values ('Poland', 'Gliwice', '44-100', 'Kujawska 2')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Cascading to save or update: model.Course
[TRACE] ID unsaved-value: 0
[TRACE] Transient instance of: model.Course
[TRACE] Saving transient instance
[TRACE] Saving [model.Course#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Course
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Course
[TRACE] Wrapped collection in role: model.Course.students
[TRACE] Adding an EntityIdentityInsertAction for [model.Course] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Course#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Course#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Course (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3ebc955b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@53a1ffbb: insert into COURSES (CERT_TYPE, DESCRIPTION, START_DATE, END_DATE) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Course#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@66d25ba9 [wrapping: com.mysql.jdbc.JDBC4ResultSet@5aa781f2]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@66d25ba9 [wrapping: com.mysql.jdbc.JDBC4ResultSet@5aa781f2]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3ebc955b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@53a1ffbb: insert into COURSES (CERT_TYPE, DESCRIPTION, START_DATE, END_DATE) values ('AIRLINE_TRANSPORT_PILOT', 'description', '2020-11-17', '1999-09-09')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3ebc955b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@53a1ffbb: insert into COURSES (CERT_TYPE, DESCRIPTION, START_DATE, END_DATE) values ('AIRLINE_TRANSPORT_PILOT', 'description', '2020-11-17', '1999-09-09')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Course
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Course.students
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Course.students
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Course
[TRACE] Cascading to save or update: model.FlightInstructor
[TRACE] ID unsaved-value: 0
[TRACE] Transient instance of: model.FlightInstructor
[TRACE] Saving transient instance
[TRACE] Saving [model.FlightInstructor#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.FlightInstructor
[TRACE] Cascading to save or update: model.Address
[TRACE] Transient instance of: model.Address
[TRACE] Saving transient instance
[TRACE] Saving [model.Address#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model.Address] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Address#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Address#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Address (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@266e9dda [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@f27d8d9: insert into ADDRESSES (COUNTRY, CITY, POSTAL_CODE, STREET) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Address#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7fe8c7db [wrapping: com.mysql.jdbc.JDBC4ResultSet@38883a31]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7fe8c7db [wrapping: com.mysql.jdbc.JDBC4ResultSet@38883a31]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@266e9dda [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@f27d8d9: insert into ADDRESSES (COUNTRY, CITY, POSTAL_CODE, STREET) values ('Poland', 'Gliwice', '44-100', 'Kujawska 3')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@266e9dda [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@f27d8d9: insert into ADDRESSES (COUNTRY, CITY, POSTAL_CODE, STREET) values ('Poland', 'Gliwice', '44-100', 'Kujawska 3')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.FlightInstructor
[TRACE] Wrapped collection in role: model.FlightInstructor.flights
[TRACE] Wrapped collection in role: model.FlightInstructor.students
[TRACE] Adding an EntityIdentityInsertAction for [model.FlightInstructor] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.FlightInstructor#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.FlightInstructor#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.FlightInstructor (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5e1a5f [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@61bfa8ff: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.FlightInstructor#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@118acf70 [wrapping: com.mysql.jdbc.JDBC4ResultSet@9fe720a]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@118acf70 [wrapping: com.mysql.jdbc.JDBC4ResultSet@9fe720a]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5e1a5f [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@61bfa8ff: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID) values ('Ismoil', 'Atajanov', 1.0, 2)]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5e1a5f [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@61bfa8ff: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID) values ('Ismoil', 'Atajanov', 1.0, 2)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model.FlightInstructor#1]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5d124d29 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5f3da752: insert into FLIGHT_INSTRUCTORS (LICENCE_NO, valid, INSTRUCTOR_ID) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.FlightInstructor#1]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5d124d29 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5f3da752: insert into FLIGHT_INSTRUCTORS (LICENCE_NO, valid, INSTRUCTOR_ID) values (101, 'Y', 1)]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5d124d29 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5f3da752: insert into FLIGHT_INSTRUCTORS (LICENCE_NO, valid, INSTRUCTOR_ID) values (101, 'Y', 1)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.FlightInstructor
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.FlightInstructor.flights
[TRACE] Cascading to save or update: model.Flight
[TRACE] ID unsaved-value: 0
[TRACE] Transient instance of: model.Flight
[TRACE] Saving transient instance
[TRACE] Saving [model.Flight#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Flight
[TRACE] Cascading to save or update: model.Student
[TRACE] Persistent instance of: model.Student
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Student#<null>]
[TRACE] Cascading to save or update: model.FlightInstructor
[TRACE] Persistent instance of: model.FlightInstructor
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.FlightInstructor#1]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Flight
[TRACE] Adding an EntityIdentityInsertAction for [model.Flight] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Flight#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Flight#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Flight (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@670342a2 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@355ddad0: insert into FLIGHTS (DESCRIPTION, DATE, STUDENT_ID, INSTRUCTOR_ID) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Flight#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7ca492d9 [wrapping: com.mysql.jdbc.JDBC4ResultSet@d5e575c]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7ca492d9 [wrapping: com.mysql.jdbc.JDBC4ResultSet@d5e575c]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@670342a2 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@355ddad0: insert into FLIGHTS (DESCRIPTION, DATE, STUDENT_ID, INSTRUCTOR_ID) values ('empty', '2020-11-17', null, 1)]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@670342a2 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@355ddad0: insert into FLIGHTS (DESCRIPTION, DATE, STUDENT_ID, INSTRUCTOR_ID) values ('empty', '2020-11-17', null, 1)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Flight
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Flight
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.FlightInstructor.flights
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.FlightInstructor.students
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.FlightInstructor.students
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.FlightInstructor
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Wrapped collection in role: model.Student.flights
[TRACE] Wrapped collection in role: model.Student.theoryClasses
[TRACE] Adding an EntityIdentityInsertAction for [model.Student] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Student#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Student#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Student (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@443cdaa4 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@61bfa8ff: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Student#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@486e9d1d [wrapping: com.mysql.jdbc.JDBC4ResultSet@3b41e1bf]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@486e9d1d [wrapping: com.mysql.jdbc.JDBC4ResultSet@3b41e1bf]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@443cdaa4 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@61bfa8ff: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID) values ('Brijesh', 'Varsani', 453241.0, 1)]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@443cdaa4 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@61bfa8ff: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID) values ('Brijesh', 'Varsani', 453241.0, 1)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model.Student#2]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5bda157e [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@2d644acb: insert into STUDENTS (MEDICAL_TESTS, COURSE_ID, INSTRUCTOR_ID, STUDENT_ID) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Student#2]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5bda157e [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@2d644acb: insert into STUDENTS (MEDICAL_TESTS, COURSE_ID, INSTRUCTOR_ID, STUDENT_ID) values ('medical tests', 1, 1, 2)]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5bda157e [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@2d644acb: insert into STUDENTS (MEDICAL_TESTS, COURSE_ID, INSTRUCTOR_ID, STUDENT_ID) values ('medical tests', 1, 1, 2)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Student.flights
[TRACE] Cascading to save or update: model.Flight
[TRACE] Persistent instance of: model.Flight
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Flight#1]
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Student.flights
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Student.theoryClasses
[TRACE] Cascading to save or update: model.TheoryClass
[TRACE] Transient instance of: model.TheoryClass
[TRACE] Saving transient instance
[TRACE] Saving [model.TheoryClass#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.TheoryClass
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.TheoryClass
[TRACE] Wrapped collection in role: model.TheoryClass.students
[TRACE] Adding an EntityIdentityInsertAction for [model.TheoryClass] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.TheoryClass#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.TheoryClass#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.TheoryClass (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1a531422 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@9a5a5c9: insert into THEORY_CLASSES (NAME, HOURS, GRADE) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.TheoryClass#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@4e4162bc [wrapping: com.mysql.jdbc.JDBC4ResultSet@7a388990]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@4e4162bc [wrapping: com.mysql.jdbc.JDBC4ResultSet@7a388990]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1a531422 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@9a5a5c9: insert into THEORY_CLASSES (NAME, HOURS, GRADE) values ('Derivatives', 1, 5)]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1a531422 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@9a5a5c9: insert into THEORY_CLASSES (NAME, HOURS, GRADE) values ('Derivatives', 1, 5)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.TheoryClass
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.TheoryClass.students
[TRACE] Cascading to save or update: model.Student
[TRACE] Persistent instance of: model.Student
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Student#2]
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.TheoryClass.students
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.TheoryClass
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Student.theoryClasses
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Saving transient instance
[TRACE] Saving [model.Student#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Cascading to save or update: model.Address
[TRACE] Persistent instance of: model.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Address#1]
[TRACE] Cascading to save or update: model.Course
[TRACE] Persistent instance of: model.Course
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Course#1]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Wrapped collection in role: model.Student.flights
[TRACE] Wrapped collection in role: model.Student.theoryClasses
[TRACE] Adding an EntityIdentityInsertAction for [model.Student] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Student#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Student#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Student (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6db328f8 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@61bfa8ff: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Student#<null>]
[DEBUG] Natively generated identity: 3
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@b2c4a8b [wrapping: com.mysql.jdbc.JDBC4ResultSet@402f8592]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@b2c4a8b [wrapping: com.mysql.jdbc.JDBC4ResultSet@402f8592]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6db328f8 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@61bfa8ff: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID) values ('Vishal', 'Indiani', 453221.0, 1)]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6db328f8 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@61bfa8ff: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID) values ('Vishal', 'Indiani', 453221.0, 1)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model.Student#3]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@43935e9c [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@2d644acb: insert into STUDENTS (MEDICAL_TESTS, COURSE_ID, INSTRUCTOR_ID, STUDENT_ID) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Student#3]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@43935e9c [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@2d644acb: insert into STUDENTS (MEDICAL_TESTS, COURSE_ID, INSTRUCTOR_ID, STUDENT_ID) values ('medical tests', 1, null, 3)]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@43935e9c [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@2d644acb: insert into STUDENTS (MEDICAL_TESTS, COURSE_ID, INSTRUCTOR_ID, STUDENT_ID) values ('medical tests', 1, null, 3)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Student.flights
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Student.flights
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Student.theoryClasses
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Student.theoryClasses
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Saving transient instance
[TRACE] Saving [model.Student#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Cascading to save or update: model.Address
[TRACE] Persistent instance of: model.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Address#1]
[TRACE] Cascading to save or update: model.Course
[TRACE] Persistent instance of: model.Course
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Course#1]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Wrapped collection in role: model.Student.flights
[TRACE] Wrapped collection in role: model.Student.theoryClasses
[TRACE] Adding an EntityIdentityInsertAction for [model.Student] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Student#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Student#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Student (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4a6c0f38 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@61bfa8ff: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Student#<null>]
[DEBUG] Natively generated identity: 4
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@70b6db83 [wrapping: com.mysql.jdbc.JDBC4ResultSet@5f8a02cf]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@70b6db83 [wrapping: com.mysql.jdbc.JDBC4ResultSet@5f8a02cf]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4a6c0f38 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@61bfa8ff: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID) values ('Gofar', 'CEO', 45021.0, 1)]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4a6c0f38 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@61bfa8ff: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID) values ('Gofar', 'CEO', 45021.0, 1)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model.Student#4]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@559af296 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@2d644acb: insert into STUDENTS (MEDICAL_TESTS, COURSE_ID, INSTRUCTOR_ID, STUDENT_ID) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Student#4]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@559af296 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@2d644acb: insert into STUDENTS (MEDICAL_TESTS, COURSE_ID, INSTRUCTOR_ID, STUDENT_ID) values ('CEO need no tests', 1, null, 4)]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@559af296 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@2d644acb: insert into STUDENTS (MEDICAL_TESTS, COURSE_ID, INSTRUCTOR_ID, STUDENT_ID) values ('CEO need no tests', 1, null, 4)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Student.flights
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Student.flights
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Student.theoryClasses
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Student.theoryClasses
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Saving transient instance
[TRACE] Saving [model.Student#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Cascading to save or update: model.Address
[TRACE] Persistent instance of: model.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Address#2]
[TRACE] Cascading to save or update: model.Course
[TRACE] ID unsaved-value: 0
[TRACE] Transient instance of: model.Course
[TRACE] Saving transient instance
[TRACE] Saving [model.Course#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Course
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Course
[TRACE] Wrapped collection in role: model.Course.students
[TRACE] Adding an EntityIdentityInsertAction for [model.Course] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Course#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Course#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Course (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@370ef50b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@53a1ffbb: insert into COURSES (CERT_TYPE, DESCRIPTION, START_DATE, END_DATE) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Course#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@4b87760e [wrapping: com.mysql.jdbc.JDBC4ResultSet@2b877a54]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@4b87760e [wrapping: com.mysql.jdbc.JDBC4ResultSet@2b877a54]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@370ef50b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@53a1ffbb: insert into COURSES (CERT_TYPE, DESCRIPTION, START_DATE, END_DATE) values ('COMMERCIAL_PILOT', 'description', '2020-11-17', '1999-09-09')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@370ef50b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@53a1ffbb: insert into COURSES (CERT_TYPE, DESCRIPTION, START_DATE, END_DATE) values ('COMMERCIAL_PILOT', 'description', '2020-11-17', '1999-09-09')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Course
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Course.students
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Course.students
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Course
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Wrapped collection in role: model.Student.flights
[TRACE] Wrapped collection in role: model.Student.theoryClasses
[TRACE] Adding an EntityIdentityInsertAction for [model.Student] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Student#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Student#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Student (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2d313c8c [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@61bfa8ff: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Student#<null>]
[DEBUG] Natively generated identity: 5
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7c1503a3 [wrapping: com.mysql.jdbc.JDBC4ResultSet@2df65a56]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7c1503a3 [wrapping: com.mysql.jdbc.JDBC4ResultSet@2df65a56]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2d313c8c [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@61bfa8ff: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID) values ('Chinateng', 'Chineseee', 41211.0, 2)]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2d313c8c [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@61bfa8ff: insert into PERSONS (FIRST_NAME, SECOND_NAME, SSN, ADDRESS_ID) values ('Chinateng', 'Chineseee', 41211.0, 2)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model.Student#5]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@47df5041 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@2d644acb: insert into STUDENTS (MEDICAL_TESTS, COURSE_ID, INSTRUCTOR_ID, STUDENT_ID) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Student#5]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@47df5041 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@2d644acb: insert into STUDENTS (MEDICAL_TESTS, COURSE_ID, INSTRUCTOR_ID, STUDENT_ID) values ('fake tests', 2, null, 5)]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@47df5041 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@2d644acb: insert into STUDENTS (MEDICAL_TESTS, COURSE_ID, INSTRUCTOR_ID, STUDENT_ID) values ('fake tests', 2, null, 5)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Student.flights
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Student.flights
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Student.theoryClasses
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Student.theoryClasses
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Student
[DEBUG] committing
[TRACE] ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
[TRACE] SessionImpl#beforeTransactionCompletion()
[TRACE] Automatically flushing session
[TRACE] Flushing session
[DEBUG] Processing flush-time cascades
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Cascading to save or update: model.Address
[TRACE] Persistent instance of: model.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Address#1]
[TRACE] Cascading to save or update: model.Course
[TRACE] Persistent instance of: model.Course
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Course#1]
[TRACE] Cascading to save or update: model.FlightInstructor
[TRACE] Persistent instance of: model.FlightInstructor
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.FlightInstructor#1]
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Student.flights
[TRACE] Cascading to save or update: model.Flight
[TRACE] Persistent instance of: model.Flight
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Flight#1]
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Student.flights
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Student.theoryClasses
[TRACE] Cascading to save or update: model.TheoryClass
[TRACE] Persistent instance of: model.TheoryClass
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.TheoryClass#1]
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Student.theoryClasses
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Course
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Course.students
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Course.students
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Course
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.FlightInstructor
[TRACE] Cascading to save or update: model.Address
[TRACE] Persistent instance of: model.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Address#2]
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.FlightInstructor.flights
[TRACE] Cascading to save or update: model.Flight
[TRACE] Persistent instance of: model.Flight
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Flight#1]
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.FlightInstructor.flights
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.FlightInstructor.students
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.FlightInstructor.students
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.FlightInstructor
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Flight
[TRACE] Cascading to save or update: model.Student
[TRACE] Persistent instance of: model.Student
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Student#2]
[TRACE] Cascading to save or update: model.FlightInstructor
[TRACE] Persistent instance of: model.FlightInstructor
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.FlightInstructor#1]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Flight
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.TheoryClass
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.TheoryClass.students
[TRACE] Cascading to save or update: model.Student
[TRACE] Persistent instance of: model.Student
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Student#2]
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.TheoryClass.students
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.TheoryClass
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Cascading to save or update: model.Address
[TRACE] Persistent instance of: model.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Address#1]
[TRACE] Cascading to save or update: model.Course
[TRACE] Persistent instance of: model.Course
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Course#1]
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Student.flights
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Student.flights
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Student.theoryClasses
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Student.theoryClasses
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Cascading to save or update: model.Address
[TRACE] Persistent instance of: model.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Address#1]
[TRACE] Cascading to save or update: model.Course
[TRACE] Persistent instance of: model.Course
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Course#1]
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Student.flights
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Student.flights
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Student.theoryClasses
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Student.theoryClasses
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Cascading to save or update: model.Address
[TRACE] Persistent instance of: model.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Address#2]
[TRACE] Cascading to save or update: model.Course
[TRACE] Persistent instance of: model.Course
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Course#2]
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Student.flights
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Student.flights
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Student.theoryClasses
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Student.theoryClasses
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Student
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Course
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Course.students
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Course.students
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Course
[DEBUG] Dirty checking collections
[TRACE] Flushing entities and processing referenced collections
[DEBUG] Collection found: [model.Student.flights#2], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.Student.theoryClasses#2], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.Course.students#1], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.FlightInstructor.flights#1], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.FlightInstructor.students#1], was: [<unreferenced>] (initialized)
[TRACE] model.Flight.student is dirty
[TRACE] Found dirty properties [[model.Flight#1]] : [student]
[TRACE] Updating entity: [model.Flight#1]
[DEBUG] Collection found: [model.TheoryClass.students#1], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.Student.flights#3], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.Student.theoryClasses#3], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.Student.flights#4], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.Student.theoryClasses#4], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.Student.flights#5], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.Student.theoryClasses#5], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.Course.students#2], was: [<unreferenced>] (initialized)
[TRACE] Processing unreferenced collections
[TRACE] Scheduling collection removes/(re)creates/updates
[DEBUG] Flushed: 0 insertions, 1 updates, 0 deletions to 11 objects
[DEBUG] Flushed: 13 (re)creations, 0 updates, 0 removals to 13 collections
[DEBUG] Listing entities:
[DEBUG] model.Student{firstName=Gofar, address=model.Address#1, instructor=null, course=model.Course#1, id=4, medicalTests=CEO need no tests, flights=[], secondName=CEO, SSN=45021.0, theoryClasses=[]}
[DEBUG] model.Flight{date=2020-11-17, instructor=model.FlightInstructor#1, student=model.Student#2, description=empty, id=1}
[DEBUG] model.Student{firstName=Vishal, address=model.Address#1, instructor=null, course=model.Course#1, id=3, medicalTests=medical tests, flights=[], secondName=Indiani, SSN=453221.0, theoryClasses=[]}
[DEBUG] model.Student{firstName=Brijesh, address=model.Address#1, instructor=model.FlightInstructor#1, course=model.Course#1, id=2, medicalTests=medical tests, flights=[model.Flight#1], secondName=Varsani, SSN=453241.0, theoryClasses=[model.TheoryClass#1]}
[DEBUG] model.FlightInstructor{valid=true, firstName=Ismoil, address=model.Address#2, students=[], id=1, licenceNo=101, flights=[model.Flight#1], secondName=Atajanov, SSN=1.0}
[DEBUG] model.TheoryClass{hours=1, grade=5, name=Derivatives, students=[model.Student#2], id=1}
[DEBUG] model.Address{country=Poland, city=Gliwice, street=Kujawska 3, postalCode=44-100, id=2}
[DEBUG] model.Course{certType=AIRLINE_TRANSPORT_PILOT, endDate=1999-09-09, description=description, students=[], id=1, startDate=2020-11-17}
[DEBUG] model.Address{country=Poland, city=Gliwice, street=Kujawska 2, postalCode=44-100, id=1}
[DEBUG] model.Course{certType=COMMERCIAL_PILOT, endDate=1999-09-09, description=description, students=[], id=2, startDate=2020-11-17}
[DEBUG] model.Student{firstName=Chinateng, address=model.Address#2, instructor=null, course=model.Course#2, id=5, medicalTests=fake tests, flights=[], secondName=Chineseee, SSN=41211.0, theoryClasses=[]}
[TRACE] Executing flush
[TRACE] Updating entity: [model.Flight#1]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@64021427 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@3aedae08: update FLIGHTS set DESCRIPTION=** NOT SPECIFIED **, DATE=** NOT SPECIFIED **, STUDENT_ID=** NOT SPECIFIED **, INSTRUCTOR_ID=** NOT SPECIFIED ** where FLIGHT_ID=** NOT SPECIFIED **]]
[TRACE] Dehydrating entity: [model.Flight#1]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@64021427 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@3aedae08: update FLIGHTS set DESCRIPTION='empty', DATE='2020-11-17', STUDENT_ID=2, INSTRUCTOR_ID=1 where FLIGHT_ID=1]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@64021427 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@3aedae08: update FLIGHTS set DESCRIPTION='empty', DATE='2020-11-17', STUDENT_ID=2, INSTRUCTOR_ID=1 where FLIGHT_ID=1]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[DEBUG] Inserting collection: [model.Student.theoryClasses#2]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.batch.spi.BatchBuilder]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5d9618f2 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@38755534: insert into STUDENTS_CLASSES (STUDENT_ID, CLASS_ID) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5d9618f2 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@38755534: insert into STUDENTS_CLASSES (STUDENT_ID, CLASS_ID) values (2, 1)]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5d9618f2 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@38755534: insert into STUDENTS_CLASSES (STUDENT_ID, CLASS_ID) values (2, 1)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[DEBUG] Done inserting collection: 1 rows inserted
[DEBUG] Inserting collection: [model.Student.theoryClasses#3]
[DEBUG] Collection was empty
[DEBUG] Inserting collection: [model.Student.theoryClasses#4]
[DEBUG] Collection was empty
[DEBUG] Inserting collection: [model.Student.theoryClasses#5]
[DEBUG] Collection was empty
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Post flush
[TRACE] LogicalConnection#beforeTransactionCompletion
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
[TRACE] Preparing to commit transaction via JDBC Connection.commit()
[TRACE] Transaction committed via JDBC Connection.commit()
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
[TRACE] Closing session [7fe10efb-0531-40c1-90c4-fedd9d35bf52]
[TRACE] Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@20a24edf]
[DEBUG] HHH000420: Closing un-released batch
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Releasing JDBC resources
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Closing logical connection
[TRACE] Logical connection closed
